{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henriquet\\\\Desktop\\\\projetos\\\\SIM_WEB\\\\src\\\\components\\\\Select\\\\index.js\";\n\n/* eslint-disable react/prop-types */\nimport React, { forwardRef, useState, useEffect } from 'react';\nconst Select = forwardRef(({\n  name = 'select',\n  defaultOption = {},\n  options = [],\n  placeholder = null,\n  onChange = () => {}\n}, ref) => {\n  const [selectedItem, setSelectedItem] = useState();\n  useEffect(() => {\n    const select = placeholder ? '' : defaultOption.name;\n    setSelectedItem(select); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [options]);\n\n  function updateSelect(e) {\n    setSelectedItem(ref.current.selectedOptions[0].name);\n    onChange(e);\n  }\n\n  return React.createElement(\"select\", {\n    style: {\n      minWidth: '100px'\n    },\n    place: true,\n    id: name,\n    name: name,\n    ref: ref,\n    value: selectedItem,\n    onChange: updateSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, placeholder), options.map(component => React.createElement(\"option\", {\n    key: component.name,\n    id: component.id,\n    value: component.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, component.title || component.name)));\n});\nexport default Select;","map":{"version":3,"sources":["C:/Users/henriquet/Desktop/projetos/SIM_WEB/src/components/Select/index.js"],"names":["React","forwardRef","useState","useEffect","Select","name","defaultOption","options","placeholder","onChange","ref","selectedItem","setSelectedItem","select","updateSelect","e","current","selectedOptions","minWidth","map","component","id","title"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AAEA,MAAMC,MAAM,GAAGH,UAAU,CACvB,CACE;AACEI,EAAAA,IAAI,GAAG,QADT;AAEEC,EAAAA,aAAa,GAAG,EAFlB;AAGEC,EAAAA,OAAO,GAAG,EAHZ;AAIEC,EAAAA,WAAW,GAAG,IAJhB;AAKEC,EAAAA,QAAQ,GAAG,MAAM,CAAE;AALrB,CADF,EAQEC,GARF,KASK;AACH,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,EAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,MAAM,GAAGL,WAAW,GAAG,EAAH,GAAQF,aAAa,CAACD,IAAhD;AACAO,IAAAA,eAAe,CAACC,MAAD,CAAf,CAFc,CAGd;AACD,GAJQ,EAIN,CAACN,OAAD,CAJM,CAAT;;AAMA,WAASO,YAAT,CAAsBC,CAAtB,EAAyB;AACvBH,IAAAA,eAAe,CAACF,GAAG,CAACM,OAAJ,CAAYC,eAAZ,CAA4B,CAA5B,EAA+BZ,IAAhC,CAAf;AACAI,IAAAA,QAAQ,CAACM,CAAD,CAAR;AACD;;AAED,SACE;AACE,IAAA,KAAK,EAAE;AAAEG,MAAAA,QAAQ,EAAE;AAAZ,KADT;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,EAAE,EAAEb,IAHN;AAIE,IAAA,IAAI,EAAEA,IAJR;AAKE,IAAA,GAAG,EAAEK,GALP;AAME,IAAA,KAAK,EAAEC,YANT;AAOE,IAAA,QAAQ,EAAEG,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAiB,IAAA,QAAQ,MAAzB;AAA0B,IAAA,MAAM,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,WADH,CATF,EAaGD,OAAO,CAACY,GAAR,CAAYC,SAAS,IACpB;AAAQ,IAAA,GAAG,EAAEA,SAAS,CAACf,IAAvB;AAA6B,IAAA,EAAE,EAAEe,SAAS,CAACC,EAA3C;AAA+C,IAAA,KAAK,EAAED,SAAS,CAACf,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGe,SAAS,CAACE,KAAV,IAAmBF,SAAS,CAACf,IADhC,CADD,CAbH,CADF;AAqBD,CA7CsB,CAAzB;AAgDA,eAAeD,MAAf","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { forwardRef, useState, useEffect } from 'react';\n\nconst Select = forwardRef(\n  (\n    {\n      name = 'select',\n      defaultOption = {},\n      options = [],\n      placeholder = null,\n      onChange = () => {},\n    },\n    ref\n  ) => {\n    const [selectedItem, setSelectedItem] = useState();\n\n    useEffect(() => {\n      const select = placeholder ? '' : defaultOption.name;\n      setSelectedItem(select);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [options]);\n\n    function updateSelect(e) {\n      setSelectedItem(ref.current.selectedOptions[0].name);\n      onChange(e);\n    }\n\n    return (\n      <select\n        style={{ minWidth: '100px' }}\n        place\n        id={name}\n        name={name}\n        ref={ref}\n        value={selectedItem}\n        onChange={updateSelect}\n      >\n        <option value=\"\" disabled hidden>\n          {placeholder}\n        </option>\n\n        {options.map(component => (\n          <option key={component.name} id={component.id} value={component.name}>\n            {component.title || component.name}\n          </option>\n        ))}\n      </select>\n    );\n  }\n);\n\nexport default Select;\n"]},"metadata":{},"sourceType":"module"}