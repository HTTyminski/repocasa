{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henriquet\\\\Desktop\\\\projetos\\\\SIM_WEB\\\\src\\\\components\\\\CurrencyInput\\\\index.js\";\nimport React, { useState, useEffect, useMemo, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useField } from '@rocketseat/unform';\nimport CurrencyInputWrapper from 'react-currency-input';\nimport { getCurrencySymbol } from '../../util/format';\nimport { CurrencyInputContainer } from './styles';\nexport default function CurrencyInput({\n  name,\n  label,\n  onChange,\n  ...rest\n}) {\n  const ref = useRef(null);\n  const {\n    fieldName,\n    registerField,\n    defaultValue,\n    error\n  } = useField(name);\n  const [amount, setAmount] = useState(defaultValue);\n  const currency = useMemo(() => getCurrencySymbol(), []);\n  useEffect(() => {\n    setAmount(defaultValue);\n  }, [defaultValue]);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: ref.current,\n      path: 'state.value'\n    });\n  }, [ref.current, fieldName]); // eslint-disable-line\n\n  return React.createElement(CurrencyInputContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, label, React.createElement(CurrencyInputWrapper, Object.assign({\n    id: name,\n    name: name,\n    prefix: `${currency} `,\n    decimalSeparator: \",\",\n    thousandSeparator: \".\",\n    ref: ref,\n    value: amount,\n    onChange: onChange,\n    maxLength: 3\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, error)));\n}\nCurrencyInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  onChange: PropTypes.func\n};\nCurrencyInput.defaultProps = {\n  label: null,\n  onChange: null\n};","map":{"version":3,"sources":["C:/Users/henriquet/Desktop/projetos/SIM_WEB/src/components/CurrencyInput/index.js"],"names":["React","useState","useEffect","useMemo","useRef","PropTypes","useField","CurrencyInputWrapper","getCurrencySymbol","CurrencyInputContainer","CurrencyInput","name","label","onChange","rest","ref","fieldName","registerField","defaultValue","error","amount","setAmount","currency","current","path","propTypes","string","isRequired","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,EAA8CC,MAA9C,QAA4D,OAA5D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,oBAAP,MAAiC,sBAAjC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AAEA,SAASC,sBAAT,QAAuC,UAAvC;AAEA,eAAe,SAASC,aAAT,CAAuB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,QAAf;AAAyB,KAAGC;AAA5B,CAAvB,EAA2D;AACxE,QAAMC,GAAG,GAAGX,MAAM,CAAC,IAAD,CAAlB;AACA,QAAM;AAAEY,IAAAA,SAAF;AAAaC,IAAAA,aAAb;AAA4BC,IAAAA,YAA5B;AAA0CC,IAAAA;AAA1C,MAAoDb,QAAQ,CAACK,IAAD,CAAlE;AAEA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAACiB,YAAD,CAApC;AAEA,QAAMI,QAAQ,GAAGnB,OAAO,CAAC,MAAMK,iBAAiB,EAAxB,EAA4B,EAA5B,CAAxB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,SAAS,CAACH,YAAD,CAAT;AACD,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,aAAa,CAAC;AACZN,MAAAA,IAAI,EAAEK,SADM;AAEZD,MAAAA,GAAG,EAAEA,GAAG,CAACQ,OAFG;AAGZC,MAAAA,IAAI,EAAE;AAHM,KAAD,CAAb;AAKD,GANQ,EAMN,CAACT,GAAG,CAACQ,OAAL,EAAcP,SAAd,CANM,CAAT,CAZwE,CAkB1C;;AAE9B,SACE,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAEL,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KADH,EAEE,oBAAC,oBAAD;AACE,IAAA,EAAE,EAAED,IADN;AAEE,IAAA,IAAI,EAAEA,IAFR;AAGE,IAAA,MAAM,EAAG,GAAEW,QAAS,GAHtB;AAIE,IAAA,gBAAgB,EAAC,GAJnB;AAKE,IAAA,iBAAiB,EAAC,GALpB;AAME,IAAA,GAAG,EAAEP,GANP;AAOE,IAAA,KAAK,EAAEK,MAPT;AAQE,IAAA,QAAQ,EAAEP,QARZ;AASE,IAAA,SAAS,EAAE;AATb,KAUMC,IAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAcGK,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,KAAP,CAdZ,CADF,CADF;AAoBD;AAEDT,aAAa,CAACe,SAAd,GAA0B;AACxBd,EAAAA,IAAI,EAAEN,SAAS,CAACqB,MAAV,CAAiBC,UADC;AAExBf,EAAAA,KAAK,EAAEP,SAAS,CAACqB,MAFO;AAGxBb,EAAAA,QAAQ,EAAER,SAAS,CAACuB;AAHI,CAA1B;AAMAlB,aAAa,CAACmB,YAAd,GAA6B;AAC3BjB,EAAAA,KAAK,EAAE,IADoB;AAE3BC,EAAAA,QAAQ,EAAE;AAFiB,CAA7B","sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useField } from '@rocketseat/unform';\nimport CurrencyInputWrapper from 'react-currency-input';\nimport { getCurrencySymbol } from '../../util/format';\n\nimport { CurrencyInputContainer } from './styles';\n\nexport default function CurrencyInput({ name, label, onChange, ...rest }) {\n  const ref = useRef(null);\n  const { fieldName, registerField, defaultValue, error } = useField(name);\n\n  const [amount, setAmount] = useState(defaultValue);\n\n  const currency = useMemo(() => getCurrencySymbol(), []);\n\n  useEffect(() => {\n    setAmount(defaultValue);\n  }, [defaultValue]);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: ref.current,\n      path: 'state.value',\n    });\n  }, [ref.current, fieldName]); // eslint-disable-line\n\n  return (\n    <CurrencyInputContainer>\n      <label htmlFor={name}>\n        {label}\n        <CurrencyInputWrapper\n          id={name}\n          name={name}\n          prefix={`${currency} `}\n          decimalSeparator=\",\"\n          thousandSeparator=\".\"\n          ref={ref}\n          value={amount}\n          onChange={onChange}\n          maxLength={3}\n          {...rest}\n        />\n        {error && <span>{error}</span>}\n      </label>\n    </CurrencyInputContainer>\n  );\n}\n\nCurrencyInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nCurrencyInput.defaultProps = {\n  label: null,\n  onChange: null,\n};\n"]},"metadata":{},"sourceType":"module"}