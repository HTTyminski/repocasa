{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henriquet\\\\Desktop\\\\projetos\\\\SIM_WEB\\\\src\\\\components\\\\SideBar\\\\index.js\";\nimport React, { useContext } from 'react';\nimport moment from 'moment';\nimport ptLocale from 'moment/locale/pt-br';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport Icon from '../Icons';\nimport { SidebarContext } from './SidebarContext';\nimport { Filters } from './Filters/Filters';\nimport { StyledSideBar } from './styles';\nmoment.updateLocale('pt-br', ptLocale);\n\nconst Sidebar = () => {\n  const {\n    visible: open,\n    setVisible: setOpen\n  } = useContext(SidebarContext); // const [startDate, setStartDate] = useState(null);\n  // const [endDate, setEndDate] = useState(null);\n  // const [focusedInput, setFocusedInput] = useState(null);\n  // const [checkboxes, setCheckboxes] = useState(DEFAULT_CHECKBOXES);\n  // const handleCheckboxChange = useCallback(\n  //   e => {\n  //     const { name, checked } = e.target;\n  //     if (checked) {\n  //       e.target.parentNode.parentElement.classList.add(\n  //         'aside__content-button--selected'\n  //       );\n  //     } else {\n  //       e.target.parentNode.parentElement.classList.remove(\n  //         'aside__content-button--selected'\n  //       );\n  //     }\n  //     setCheckboxes([\n  //       ...checkboxes.map(checkbox =>\n  //         checkbox.id === e.target.name\n  //           ? { ...checkbox, id: name, checked }\n  //           : checkbox\n  //       ),\n  //     ]);\n  //   },\n  //   [checkboxes]\n  // );\n\n  return React.createElement(StyledSideBar, {\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"aside__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"aside__header-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"iconFilter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Filtros\")), React.createElement(\"a\", {\n    href: \"'#\",\n    className: \"aside__header-button\",\n    type: \"button\",\n    \"aria-label\": \"Filter button\",\n    open: open,\n    onClick: e => {\n      e.preventDefault();\n      setOpen(!open);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"iconArrowRight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))), React.createElement(Filters, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }));\n};\n\nexport default Sidebar;","map":{"version":3,"sources":["C:/Users/henriquet/Desktop/projetos/SIM_WEB/src/components/SideBar/index.js"],"names":["React","useContext","moment","ptLocale","Icon","SidebarContext","Filters","StyledSideBar","updateLocale","Sidebar","visible","open","setVisible","setOpen","e","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,OAAO,wBAAP;AACA,OAAO,qCAAP;AAEA,OAAOC,IAAP,MAAiB,UAAjB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,aAAT,QAA8B,UAA9B;AAEAL,MAAM,CAACM,YAAP,CAAoB,OAApB,EAA6BL,QAA7B;;AAEA,MAAMM,OAAO,GAAG,MAAM;AACpB,QAAM;AAAEC,IAAAA,OAAO,EAAEC,IAAX;AAAiBC,IAAAA,UAAU,EAAEC;AAA7B,MAAyCZ,UAAU,CAACI,cAAD,CAAzD,CADoB,CAEpB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAEM,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF,EAKE;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,SAAS,EAAC,sBAFZ;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,kBAAW,eAJb;AAKE,IAAA,IAAI,EAAEA,IALR;AAME,IAAA,OAAO,EAAEG,CAAC,IAAI;AACZA,MAAAA,CAAC,CAACC,cAAF;AACAF,MAAAA,OAAO,CAAC,CAACF,IAAF,CAAP;AACD,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CALF,CADF,EAoBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADF;AAwBD,CAvDD;;AAyDA,eAAeF,OAAf","sourcesContent":["import React, { useContext } from 'react';\r\n\r\nimport moment from 'moment';\r\nimport ptLocale from 'moment/locale/pt-br';\r\n\r\nimport 'react-dates/initialize';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\n\r\nimport Icon from '../Icons';\r\nimport { SidebarContext } from './SidebarContext';\r\nimport { Filters } from './Filters/Filters';\r\nimport { StyledSideBar } from './styles';\r\n\r\nmoment.updateLocale('pt-br', ptLocale);\r\n\r\nconst Sidebar = () => {\r\n  const { visible: open, setVisible: setOpen } = useContext(SidebarContext);\r\n  // const [startDate, setStartDate] = useState(null);\r\n  // const [endDate, setEndDate] = useState(null);\r\n  // const [focusedInput, setFocusedInput] = useState(null);\r\n  // const [checkboxes, setCheckboxes] = useState(DEFAULT_CHECKBOXES);\r\n\r\n  // const handleCheckboxChange = useCallback(\r\n  //   e => {\r\n  //     const { name, checked } = e.target;\r\n  //     if (checked) {\r\n  //       e.target.parentNode.parentElement.classList.add(\r\n  //         'aside__content-button--selected'\r\n  //       );\r\n  //     } else {\r\n  //       e.target.parentNode.parentElement.classList.remove(\r\n  //         'aside__content-button--selected'\r\n  //       );\r\n  //     }\r\n\r\n  //     setCheckboxes([\r\n  //       ...checkboxes.map(checkbox =>\r\n  //         checkbox.id === e.target.name\r\n  //           ? { ...checkbox, id: name, checked }\r\n  //           : checkbox\r\n  //       ),\r\n  //     ]);\r\n  //   },\r\n  //   [checkboxes]\r\n  // );\r\n\r\n  return (\r\n    <StyledSideBar open={open}>\r\n      <div className=\"aside__header\">\r\n        <div className=\"aside__header-title\">\r\n          <Icon name=\"iconFilter\" />\r\n          <span>Filtros</span>\r\n        </div>\r\n        <a\r\n          href=\"'#\"\r\n          className=\"aside__header-button\"\r\n          type=\"button\"\r\n          aria-label=\"Filter button\"\r\n          open={open}\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            setOpen(!open);\r\n          }}\r\n        >\r\n          <Icon name=\"iconArrowRight\" />\r\n        </a>\r\n      </div>\r\n      <Filters />\r\n    </StyledSideBar>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}