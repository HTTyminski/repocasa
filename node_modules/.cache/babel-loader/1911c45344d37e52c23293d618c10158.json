{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henriquet\\\\Desktop\\\\projetos\\\\SIM_WEB\\\\src\\\\pages\\\\PlanejamentoAnual\\\\components\\\\WaterFormModal.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { Form } from '@rocketseat/unform';\nimport Icon from '../../../components/Icons';\nimport CurrencyInput from '../../../components/CurrencyInput';\nimport api from '../../../services/api';\nconst schema = Yup.object().shape({\n  water_consumption: Yup.number() // .positive('Valor deve ser maior que 0.')\n  .required('Valor é obrigatório.')\n});\nexport default function WaterFormModal({\n  handleClose,\n  item,\n  loadPlanning\n}) {\n  const [initialData, setInitialData] = useState();\n  const [isEdit, setEdit] = useState(false);\n  const [planning, setPlanning] = useState([]);\n  console.log('Form data water', item); // eslint-disable-line\n\n  const hotelID = useSelector(state => state.user.profile.activeHotel);\n  const hotelName = useSelector(state => state.user.profile.activeHotelName);\n\n  async function handleSubmit(data) {\n    const {\n      water_consumption\n    } = data;\n    await api.put(`/annual-plans/${item}`, {\n      hotel_id: hotelID,\n      water_consumption\n    });\n    toast.success('Valor da água cadastrada com sucesso.');\n    handleClose();\n    loadPlanning();\n  }\n\n  useEffect(() => {\n    async function loadData() {\n      const response = await api.get(`/annual-plans/${item}`, {\n        params: {\n          hotel_id: hotelID\n        }\n      });\n      const {\n        data\n      } = response;\n\n      if (data.water_consumption !== 0) {\n        setEdit(true);\n      }\n\n      setInitialData({ ...data\n      });\n      setPlanning(data);\n    }\n\n    loadData();\n  }, [hotelID, item]);\n  useEffect(() => {\n    const {\n      current\n    } = buttonRef;\n\n    const handleFocus = () => current.style.opacity = '0.8';\n\n    const handleBlur = () => current.style.opacity = '1';\n\n    current.addEventListener('focusin', handleFocus);\n    current.addEventListener('blur', handleBlur);\n    return () => {\n      current.removeEventListener('focusin', handleFocus);\n      current.removeEventListener('blur', handleBlur);\n    };\n  }, [createModal]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"modal__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, isEdit ? React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Editar planejamento\") : React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Incluir planejamento\"), React.createElement(\"button\", {\n    className: \"close\",\n    type: \"button\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"iconDelete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"modal__body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal__group-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"modal__group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Planeje o valor de receita mensal por Unidade\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), \"Habitacional para cada ano.\")), React.createElement(\"div\", {\n    className: \"modal__group-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"modal__group-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Empreendimento\"), React.createElement(\"span\", {\n    className: \"modal__group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, hotelName)), React.createElement(Form, {\n    schema: schema,\n    onSubmit: handleSubmit,\n    initialData: initialData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal__group-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"modal__group-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"M\\xEAs\"), React.createElement(\"span\", {\n    className: \"modal__group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, planning.month_name, \" / \", planning.year)), React.createElement(\"div\", {\n    className: \"form__group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(CurrencyInput, {\n    className: \"form__input\",\n    name: \"water_consumption\",\n    onChange: () => {},\n    label: \"Valor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    ref: \"buttonRef\",\n    className: \"btn btn-add\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, isEdit ? 'Concluir edição' : 'Incluir planejamento'))));\n}\nWaterFormModal.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  item: PropTypes.number,\n  loadPlanning: PropTypes.func.isRequired\n};\nWaterFormModal.defaultProps = {\n  item: null\n};","map":{"version":3,"sources":["C:/Users/henriquet/Desktop/projetos/SIM_WEB/src/pages/PlanejamentoAnual/components/WaterFormModal.js"],"names":["React","useState","useEffect","useRef","useSelector","Yup","toast","PropTypes","Form","Icon","CurrencyInput","api","schema","object","shape","water_consumption","number","required","WaterFormModal","handleClose","item","loadPlanning","initialData","setInitialData","isEdit","setEdit","planning","setPlanning","console","log","hotelID","state","user","profile","activeHotel","hotelName","activeHotelName","handleSubmit","data","put","hotel_id","success","loadData","response","get","params","current","buttonRef","handleFocus","style","opacity","handleBlur","addEventListener","removeEventListener","createModal","month_name","year","propTypes","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { Form } from '@rocketseat/unform';\n\nimport Icon from '../../../components/Icons';\nimport CurrencyInput from '../../../components/CurrencyInput';\n\nimport api from '../../../services/api';\n\nconst schema = Yup.object().shape({\n  water_consumption: Yup.number()\n    // .positive('Valor deve ser maior que 0.')\n    .required('Valor é obrigatório.'),\n});\n\nexport default function WaterFormModal({ handleClose, item, loadPlanning }) {\n  const [initialData, setInitialData] = useState();\n  const [isEdit, setEdit] = useState(false);\n  const [planning, setPlanning] = useState([]);\n\n  console.log('Form data water', item); // eslint-disable-line\n\n  const hotelID = useSelector(state => state.user.profile.activeHotel);\n  const hotelName = useSelector(state => state.user.profile.activeHotelName);\n\n  async function handleSubmit(data) {\n    const { water_consumption } = data;\n\n    await api.put(`/annual-plans/${item}`, {\n      hotel_id: hotelID,\n      water_consumption,\n    });\n\n    toast.success('Valor da água cadastrada com sucesso.');\n\n    handleClose();\n    loadPlanning();\n  }\n\n  useEffect(() => {\n    async function loadData() {\n      const response = await api.get(`/annual-plans/${item}`, {\n        params: {\n          hotel_id: hotelID,\n        },\n      });\n\n      const { data } = response;\n\n      if (data.water_consumption !== 0) {\n        setEdit(true);\n      }\n\n      setInitialData({\n        ...data,\n      });\n\n      setPlanning(data);\n    }\n    loadData();\n  }, [hotelID, item]);\n\n  useEffect(() => {\n    const { current } = buttonRef;\n\n    const handleFocus = () => (current.style.opacity = '0.8');\n    const handleBlur = () => (current.style.opacity = '1');\n\n    current.addEventListener('focusin', handleFocus);\n    current.addEventListener('blur', handleBlur);\n\n    return () => {\n      current.removeEventListener('focusin', handleFocus);\n      current.removeEventListener('blur', handleBlur);\n    };\n  }, [createModal]);\n\n  return (\n    <>\n      <div className=\"modal__header\">\n        {isEdit ? <h3>Editar planejamento</h3> : <h3>Incluir planejamento</h3>}\n        <button className=\"close\" type=\"button\" onClick={handleClose}>\n          <Icon name=\"iconDelete\" />\n        </button>\n      </div>\n      <div className=\"modal__body\">\n        <div className=\"modal__group-info\">\n          <span className=\"modal__group-text\">\n            Planeje o valor de receita mensal por Unidade\n            <br />\n            Habitacional para cada ano.\n          </span>\n        </div>\n        <div className=\"modal__group-info\">\n          <p className=\"modal__group-title\">Empreendimento</p>\n          <span className=\"modal__group-text\">{hotelName}</span>\n        </div>\n        <Form schema={schema} onSubmit={handleSubmit} initialData={initialData}>\n          <div className=\"modal__group-info\">\n            <p className=\"modal__group-title\">Mês</p>\n            <span className=\"modal__group-text\">\n              {planning.month_name} / {planning.year}\n            </span>\n          </div>\n          <div className=\"form__group\">\n            <CurrencyInput\n              className=\"form__input\"\n              name=\"water_consumption\"\n              onChange={() => {}}\n              label=\"Valor\"\n            />\n          </div>\n          <button ref=\"buttonRef\" className=\"btn btn-add\" type=\"submit\">\n            {isEdit ? 'Concluir edição' : 'Incluir planejamento'}\n          </button>\n        </Form>\n      </div>\n    </>\n  );\n}\n\nWaterFormModal.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  item: PropTypes.number,\n  loadPlanning: PropTypes.func.isRequired,\n};\n\nWaterFormModal.defaultProps = {\n  item: null,\n};\n"]},"metadata":{},"sourceType":"module"}