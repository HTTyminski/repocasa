{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henriquet\\\\Desktop\\\\projetos\\\\SIM_WEB\\\\src\\\\components\\\\SideBar\\\\Filters\\\\Filters.js\";\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n/**\n * TODO: melhorar isso generalizando os imports\n */\n\nimport * as ClockActions from '../../../store/modules/consumo/clock/actions';\nimport * as ReceitaActions from '../../../store/modules/consumo/receita/actions';\nimport * as InvoiceActions from '../../../store/modules/consumo/invoice/actions';\nimport * as AnnualPlanningActions from '../../../store/modules/consumo/annualplanning/actions';\nimport * as ConsumptionHotelActions from '../../../store/modules/consumo/consumptionhotel/actions';\nimport * as ConsumptionReadingActions from '../../../store/modules/consumo/consumptionreading/actions';\nimport * as GeneralConsumptionActions from '../../../store/modules/consumo/generalconsumption/actions';\nimport Icon from '../../Icons';\nimport { DateRange } from './components/DateRange';\nimport { DateMonth } from './components/DateMonth';\nimport { MultiSelect } from './components/MultiSelect';\nimport { MultiSelectHotel } from './components/MultiSelectHotel';\nimport { CheckBoxClock, CLOCK_CHECKBOXES } from './components/CheckBoxClock';\nimport { CheckBoxConsumptionHotel, CONSUMPTIONHOTEL_CHECKBOXES } from './components/CheckBoxConsumptionHotel';\nimport { CheckBoxConsumptionReading, CONSUMPTIONREADING_CHECKBOXES } from './components/CheckBoxConsumptionReading';\nimport { CheckBoxInvoice, INVOICE_CHECKBOXES } from './components/CheckBoxInvoice'; // renderiza o os componentes de filtro e manipula o redux\n\nconst ClockFilters = () => {\n  const checkBoxValues = useSelector(state => state.clock.consumption);\n  const dispatch = useDispatch();\n\n  const handleCheckboxChange = event => {\n    const {\n      value\n    } = event.target;\n    dispatch(ClockActions.changeClockCheckboxAction(value));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"aside__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"aside__content-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Consumo:\"), CLOCK_CHECKBOXES.map(checkbox => {\n    const isChecked = checkBoxValues.includes(checkbox.value);\n    const checkedClass = isChecked ? 'aside__content-button--selected' : '';\n    return React.createElement(\"label\", {\n      key: checkbox.id,\n      htmlFor: checkbox.id,\n      className: `aside__content-button ${checkedClass}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: checkbox.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, checkbox.label)), React.createElement(CheckBoxClock, {\n      id: checkbox.id,\n      name: checkbox.name,\n      value: checkbox.value,\n      checked: isChecked,\n      onChange: handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }));\n};\n\nconst ReceitaFilters = () => {\n  const dispatch = useDispatch();\n  const receita = useSelector(state => state.receita);\n\n  const handleChangeDate = newDate => {\n    dispatch(ReceitaActions.changeDateAction(newDate));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"aside__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(DateMonth, {\n    onChange: handleChangeDate,\n    value: receita.date,\n    dateFormat: \"yyyy\",\n    showYearPicker: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }));\n};\n\nconst AnnualPlanningFilters = () => {\n  const dispatch = useDispatch();\n  const annualplanning = useSelector(state => state.annualplanning);\n\n  const handleChangeDate = newDate => {\n    dispatch(AnnualPlanningActions.changeDateAction(newDate));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"aside__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(DateMonth, {\n    onChange: handleChangeDate,\n    value: annualplanning.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }));\n};\n\nconst ConsumptionReadingFilters = () => {\n  const dispatch = useDispatch();\n  const consumptionreading = useSelector(state => state.consumptionreading);\n  const checkBoxValues = useSelector(state => state.consumptionreading.consumption);\n\n  const handleChangeDate = newDate => {\n    dispatch(ConsumptionReadingActions.changeDateAction(newDate));\n  };\n\n  const handleCheckboxChange = event => {\n    const {\n      value\n    } = event.target;\n    dispatch(ConsumptionReadingActions.changeConsumptionReadingboxAction(value));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"aside__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(DateMonth, {\n    onChange: handleChangeDate,\n    value: consumptionreading.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"aside__content-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Consumo:\"), CONSUMPTIONREADING_CHECKBOXES.map(checkbox => {\n    const isChecked = checkBoxValues.includes(checkbox.value);\n    const checkedClass = isChecked ? 'aside__content-button--selected' : '';\n    return React.createElement(\"label\", {\n      key: checkbox.id,\n      htmlFor: checkbox.id,\n      className: `aside__content-button ${checkedClass}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: checkbox.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, checkbox.label)), React.createElement(CheckBoxConsumptionReading, {\n      id: checkbox.id,\n      name: checkbox.id,\n      value: checkbox.value,\n      checked: isChecked,\n      onChange: handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }));\n  }));\n};\n\nconst InvoiceFilters = () => {\n  const dispatch = useDispatch();\n  const invoice = useSelector(state => state.invoice);\n  const checkBoxValues = useSelector(state => state.invoice.consumption);\n\n  const handleChangeDate = newDate => {\n    dispatch(InvoiceActions.changeDateAction(newDate));\n  };\n\n  const handleCheckboxChange = event => {\n    const {\n      value\n    } = event.target;\n    dispatch(InvoiceActions.changeInvoiceCheckboxAction(value));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"aside__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(DateMonth, {\n    onChange: handleChangeDate,\n    value: invoice.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }), INVOICE_CHECKBOXES.map(checkbox => {\n    const isChecked = checkBoxValues.includes(checkbox.value);\n    const checkedClass = isChecked ? 'aside__content-button--selected' : '';\n    return React.createElement(\"label\", {\n      key: checkbox.id,\n      htmlFor: checkbox.id,\n      className: `aside__content-button ${checkedClass}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: checkbox.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, checkbox.label)), React.createElement(CheckBoxInvoice, {\n      id: checkbox.id,\n      name: checkbox.id,\n      value: checkbox.value,\n      checked: isChecked,\n      onChange: handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }));\n  }));\n};\n\nconst ConsumptionHotelFilters = () => {\n  const dispatch = useDispatch();\n  const consumptionhotel = useSelector(state => state.consumptionhotel);\n  const {\n    start,\n    end\n  } = useSelector(state => state.consumptionhotel);\n  const checkBoxValues = useSelector(state => state.consumptionhotel.consumption);\n\n  const handleChangeDate = ({\n    startDate: start,\n    endDate: end\n  }) => {\n    dispatch(ConsumptionHotelActions.changeDateAction(start, end));\n  };\n\n  const handleCheckboxChange = event => {\n    const {\n      value\n    } = event.target;\n    dispatch(ConsumptionHotelActions.changeConsumptionHotelCheckboxAction(value));\n  };\n\n  const handleSelect = newSelect => {\n    dispatch(ConsumptionHotelActions.selectMultiAction(newSelect));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"aside__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(DateRange, {\n    startDate: start,\n    endDate: end,\n    onDatesChange: handleChangeDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"aside__content-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, \"Consumo:\"), CONSUMPTIONHOTEL_CHECKBOXES.map(checkbox => {\n    const isChecked = checkBoxValues.includes(checkbox.value);\n    const checkedClass = isChecked ? 'aside__content-button--selected' : '';\n    return React.createElement(\"label\", {\n      key: checkbox.id,\n      htmlFor: checkbox.id,\n      className: `aside__content-button ${checkedClass}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: checkbox.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, checkbox.label)), React.createElement(CheckBoxConsumptionHotel, {\n      id: checkbox.id,\n      name: checkbox.id,\n      value: checkbox.value,\n      checked: isChecked,\n      onChange: handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }));\n  }), React.createElement(MultiSelect, {\n    onChange: handleSelect,\n    value: consumptionhotel.select,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }));\n};\n\nconst GeneralConsumptionFilters = () => {\n  const dispatch = useDispatch();\n  const generalconsumption = useSelector(state => state.generalconsumption);\n\n  const handleChangeDate = newDate => {\n    dispatch(GeneralConsumptionActions.changeDateAction(newDate));\n  };\n\n  const handleSelect = newSelect => {\n    dispatch(GeneralConsumptionActions.selectMultiAction(newSelect));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"aside__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, React.createElement(DateMonth, {\n    onChange: handleChangeDate,\n    value: generalconsumption.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }), React.createElement(MultiSelectHotel, {\n    onChange: handleSelect,\n    value: generalconsumption.select,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }));\n}; // responsavel somente para chamar o componente de filtro para renderizar na tela conforme a rota\n\n\nexport const Filters = () => {\n  const {\n    pathname\n  } = useLocation(); // se entrar nessa rota renderiza esse filtro\n\n  if (pathname.indexOf('dashboard/consumo/relogios') > -1) {\n    return React.createElement(ClockFilters, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    });\n  }\n\n  if (pathname.indexOf('dashboard/consumo/receita') > -1) {\n    return React.createElement(ReceitaFilters, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    });\n  }\n\n  if (pathname.indexOf('dashboard/consumo/planejamento-anual') > -1) {\n    return React.createElement(AnnualPlanningFilters, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    });\n  }\n\n  if (pathname.indexOf('dashboard/consumo/leitura-consumo') > -1) {\n    return React.createElement(ConsumptionReadingFilters, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    });\n  }\n\n  if (pathname.indexOf('dashboard/consumo/contas') > -1) {\n    return React.createElement(InvoiceFilters, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    });\n  }\n\n  if (pathname.indexOf('dashboard/consumo/consumo-hotel') > -1) {\n    return React.createElement(ConsumptionHotelFilters, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    });\n  }\n\n  if (pathname.indexOf('dashboard/consumo/consumo-geral') > -1) {\n    return React.createElement(GeneralConsumptionFilters, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    });\n  }\n\n  return null;\n};","map":{"version":3,"sources":["C:/Users/henriquet/Desktop/projetos/SIM_WEB/src/components/SideBar/Filters/Filters.js"],"names":["React","useLocation","useSelector","useDispatch","ClockActions","ReceitaActions","InvoiceActions","AnnualPlanningActions","ConsumptionHotelActions","ConsumptionReadingActions","GeneralConsumptionActions","Icon","DateRange","DateMonth","MultiSelect","MultiSelectHotel","CheckBoxClock","CLOCK_CHECKBOXES","CheckBoxConsumptionHotel","CONSUMPTIONHOTEL_CHECKBOXES","CheckBoxConsumptionReading","CONSUMPTIONREADING_CHECKBOXES","CheckBoxInvoice","INVOICE_CHECKBOXES","ClockFilters","checkBoxValues","state","clock","consumption","dispatch","handleCheckboxChange","event","value","target","changeClockCheckboxAction","map","checkbox","isChecked","includes","checkedClass","id","icon","label","name","ReceitaFilters","receita","handleChangeDate","newDate","changeDateAction","date","AnnualPlanningFilters","annualplanning","ConsumptionReadingFilters","consumptionreading","changeConsumptionReadingboxAction","InvoiceFilters","invoice","changeInvoiceCheckboxAction","ConsumptionHotelFilters","consumptionhotel","start","end","startDate","endDate","changeConsumptionHotelCheckboxAction","handleSelect","newSelect","selectMultiAction","select","GeneralConsumptionFilters","generalconsumption","Filters","pathname","indexOf"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\n/**\n * TODO: melhorar isso generalizando os imports\n */\nimport * as ClockActions from '../../../store/modules/consumo/clock/actions';\nimport * as ReceitaActions from '../../../store/modules/consumo/receita/actions';\nimport * as InvoiceActions from '../../../store/modules/consumo/invoice/actions';\nimport * as AnnualPlanningActions from '../../../store/modules/consumo/annualplanning/actions';\nimport * as ConsumptionHotelActions from '../../../store/modules/consumo/consumptionhotel/actions';\nimport * as ConsumptionReadingActions from '../../../store/modules/consumo/consumptionreading/actions';\nimport * as GeneralConsumptionActions from '../../../store/modules/consumo/generalconsumption/actions';\n\nimport Icon from '../../Icons';\n\nimport { DateRange } from './components/DateRange';\nimport { DateMonth } from './components/DateMonth';\nimport { MultiSelect } from './components/MultiSelect';\nimport { MultiSelectHotel } from './components/MultiSelectHotel';\nimport { CheckBoxClock, CLOCK_CHECKBOXES } from './components/CheckBoxClock';\nimport {\n  CheckBoxConsumptionHotel,\n  CONSUMPTIONHOTEL_CHECKBOXES,\n} from './components/CheckBoxConsumptionHotel';\nimport {\n  CheckBoxConsumptionReading,\n  CONSUMPTIONREADING_CHECKBOXES,\n} from './components/CheckBoxConsumptionReading';\nimport {\n  CheckBoxInvoice,\n  INVOICE_CHECKBOXES,\n} from './components/CheckBoxInvoice';\n\n// renderiza o os componentes de filtro e manipula o redux\nconst ClockFilters = () => {\n  const checkBoxValues = useSelector(state => state.clock.consumption);\n\n  const dispatch = useDispatch();\n\n  const handleCheckboxChange = event => {\n    const { value } = event.target;\n\n    dispatch(ClockActions.changeClockCheckboxAction(value));\n  };\n\n  return (\n    <div className=\"aside__content\">\n      <span className=\"aside__content-title\">Consumo:</span>\n      {CLOCK_CHECKBOXES.map(checkbox => {\n        const isChecked = checkBoxValues.includes(checkbox.value);\n\n        const checkedClass = isChecked ? 'aside__content-button--selected' : '';\n\n        return (\n          <label\n            key={checkbox.id}\n            htmlFor={checkbox.id}\n            className={`aside__content-button ${checkedClass}`}\n          >\n            <span>\n              <Icon name={checkbox.icon} />\n              <span>{checkbox.label}</span>\n            </span>\n            <CheckBoxClock\n              id={checkbox.id}\n              name={checkbox.name}\n              value={checkbox.value}\n              checked={isChecked}\n              onChange={handleCheckboxChange}\n            />\n          </label>\n        );\n      })}\n    </div>\n  );\n};\n\nconst ReceitaFilters = () => {\n  const dispatch = useDispatch();\n  const receita = useSelector(state => state.receita);\n\n  const handleChangeDate = newDate => {\n    dispatch(ReceitaActions.changeDateAction(newDate));\n  };\n\n  return (\n    <div className=\"aside__content\">\n      <DateMonth\n        onChange={handleChangeDate}\n        value={receita.date}\n        dateFormat=\"yyyy\"\n        showYearPicker\n      />\n    </div>\n  );\n};\n\nconst AnnualPlanningFilters = () => {\n  const dispatch = useDispatch();\n  const annualplanning = useSelector(state => state.annualplanning);\n\n  const handleChangeDate = newDate => {\n    dispatch(AnnualPlanningActions.changeDateAction(newDate));\n  };\n\n  return (\n    <div className=\"aside__content\">\n      <DateMonth onChange={handleChangeDate} value={annualplanning.date} />\n    </div>\n  );\n};\n\nconst ConsumptionReadingFilters = () => {\n  const dispatch = useDispatch();\n  const consumptionreading = useSelector(state => state.consumptionreading);\n  const checkBoxValues = useSelector(\n    state => state.consumptionreading.consumption\n  );\n\n  const handleChangeDate = newDate => {\n    dispatch(ConsumptionReadingActions.changeDateAction(newDate));\n  };\n\n  const handleCheckboxChange = event => {\n    const { value } = event.target;\n\n    dispatch(\n      ConsumptionReadingActions.changeConsumptionReadingboxAction(value)\n    );\n  };\n\n  return (\n    <div className=\"aside__content\">\n      <DateMonth onChange={handleChangeDate} value={consumptionreading.date} />\n\n      <span className=\"aside__content-title\">Consumo:</span>\n      {CONSUMPTIONREADING_CHECKBOXES.map(checkbox => {\n        const isChecked = checkBoxValues.includes(checkbox.value);\n        const checkedClass = isChecked ? 'aside__content-button--selected' : '';\n        return (\n          <label\n            key={checkbox.id}\n            htmlFor={checkbox.id}\n            className={`aside__content-button ${checkedClass}`}\n          >\n            <span>\n              <Icon name={checkbox.icon} />\n              <span>{checkbox.label}</span>\n            </span>\n            <CheckBoxConsumptionReading\n              id={checkbox.id}\n              name={checkbox.id}\n              value={checkbox.value}\n              checked={isChecked}\n              onChange={handleCheckboxChange}\n            />\n          </label>\n        );\n      })}\n    </div>\n  );\n};\n\nconst InvoiceFilters = () => {\n  const dispatch = useDispatch();\n  const invoice = useSelector(state => state.invoice);\n  const checkBoxValues = useSelector(state => state.invoice.consumption);\n\n  const handleChangeDate = newDate => {\n    dispatch(InvoiceActions.changeDateAction(newDate));\n  };\n\n  const handleCheckboxChange = event => {\n    const { value } = event.target;\n\n    dispatch(InvoiceActions.changeInvoiceCheckboxAction(value));\n  };\n\n  return (\n    <div className=\"aside__content\">\n      <DateMonth onChange={handleChangeDate} value={invoice.date} />\n\n      {/* <span className=\"aside__content-title\">Consumo:</span> */}\n      {INVOICE_CHECKBOXES.map(checkbox => {\n        const isChecked = checkBoxValues.includes(checkbox.value);\n        const checkedClass = isChecked ? 'aside__content-button--selected' : '';\n        return (\n          <label\n            key={checkbox.id}\n            htmlFor={checkbox.id}\n            className={`aside__content-button ${checkedClass}`}\n          >\n            <span>\n              <Icon name={checkbox.icon} />\n              <span>{checkbox.label}</span>\n            </span>\n            <CheckBoxInvoice\n              id={checkbox.id}\n              name={checkbox.id}\n              value={checkbox.value}\n              checked={isChecked}\n              onChange={handleCheckboxChange}\n            />\n          </label>\n        );\n      })}\n    </div>\n  );\n};\n\nconst ConsumptionHotelFilters = () => {\n  const dispatch = useDispatch();\n  const consumptionhotel = useSelector(state => state.consumptionhotel);\n  const { start, end } = useSelector(state => state.consumptionhotel);\n\n  const checkBoxValues = useSelector(\n    state => state.consumptionhotel.consumption\n  );\n\n  const handleChangeDate = ({ startDate: start, endDate: end }) => {\n    dispatch(ConsumptionHotelActions.changeDateAction(start, end));\n  };\n\n  const handleCheckboxChange = event => {\n    const { value } = event.target;\n    dispatch(\n      ConsumptionHotelActions.changeConsumptionHotelCheckboxAction(value)\n    );\n  };\n\n  const handleSelect = newSelect => {\n    dispatch(ConsumptionHotelActions.selectMultiAction(newSelect));\n  };\n\n  return (\n    <div className=\"aside__content\">\n      <DateRange\n        startDate={start}\n        endDate={end}\n        onDatesChange={handleChangeDate}\n      />\n\n      <span className=\"aside__content-title\">Consumo:</span>\n      {CONSUMPTIONHOTEL_CHECKBOXES.map(checkbox => {\n        const isChecked = checkBoxValues.includes(checkbox.value);\n        const checkedClass = isChecked ? 'aside__content-button--selected' : '';\n        return (\n          <label\n            key={checkbox.id}\n            htmlFor={checkbox.id}\n            className={`aside__content-button ${checkedClass}`}\n          >\n            <span>\n              <Icon name={checkbox.icon} />\n              <span>{checkbox.label}</span>\n            </span>\n            <CheckBoxConsumptionHotel\n              id={checkbox.id}\n              name={checkbox.id}\n              value={checkbox.value}\n              checked={isChecked}\n              onChange={handleCheckboxChange}\n            />\n          </label>\n        );\n      })}\n\n      <MultiSelect onChange={handleSelect} value={consumptionhotel.select} />\n    </div>\n  );\n};\n\nconst GeneralConsumptionFilters = () => {\n  const dispatch = useDispatch();\n  const generalconsumption = useSelector(state => state.generalconsumption);\n\n  const handleChangeDate = newDate => {\n    dispatch(GeneralConsumptionActions.changeDateAction(newDate));\n  };\n\n  const handleSelect = newSelect => {\n    dispatch(GeneralConsumptionActions.selectMultiAction(newSelect));\n  };\n\n  return (\n    <div className=\"aside__content\">\n      <DateMonth onChange={handleChangeDate} value={generalconsumption.date} />\n      <MultiSelectHotel\n        onChange={handleSelect}\n        value={generalconsumption.select}\n      />\n    </div>\n  );\n};\n\n// responsavel somente para chamar o componente de filtro para renderizar na tela conforme a rota\nexport const Filters = () => {\n  const { pathname } = useLocation();\n\n  // se entrar nessa rota renderiza esse filtro\n  if (pathname.indexOf('dashboard/consumo/relogios') > -1) {\n    return <ClockFilters />;\n  }\n\n  if (pathname.indexOf('dashboard/consumo/receita') > -1) {\n    return <ReceitaFilters />;\n  }\n\n  if (pathname.indexOf('dashboard/consumo/planejamento-anual') > -1) {\n    return <AnnualPlanningFilters />;\n  }\n\n  if (pathname.indexOf('dashboard/consumo/leitura-consumo') > -1) {\n    return <ConsumptionReadingFilters />;\n  }\n\n  if (pathname.indexOf('dashboard/consumo/contas') > -1) {\n    return <InvoiceFilters />;\n  }\n\n  if (pathname.indexOf('dashboard/consumo/consumo-hotel') > -1) {\n    return <ConsumptionHotelFilters />;\n  }\n\n  if (pathname.indexOf('dashboard/consumo/consumo-geral') > -1) {\n    return <GeneralConsumptionFilters />;\n  }\n\n  return null;\n};\n"]},"metadata":{},"sourceType":"module"}