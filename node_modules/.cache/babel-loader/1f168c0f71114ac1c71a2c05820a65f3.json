{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henriquet\\\\Desktop\\\\projetos\\\\SIM_WEB\\\\src\\\\pages\\\\PlanejamentoAnual\\\\components\\\\WaterFormModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { Form } from '@rocketseat/unform';\nimport Icon from '../../../components/Icons';\nimport CurrencyInput from '../../../components/CurrencyInput';\nimport api from '../../../services/api';\nimport { Label } from '../../../components/Modal/styles';\nconst schema = Yup.object().shape({\n  water_consumption: Yup.number() // .positive('Valor deve ser maior que 0.')\n  .required('Valor é obrigatório.')\n});\nexport default function WaterFormModal({\n  handleClose,\n  item,\n  loadPlanning\n}) {\n  const [initialData, setInitialData] = useState();\n  const [isEdit, setEdit] = useState(false);\n  const [planning, setPlanning] = useState([]);\n  console.log('Form data water', item); // eslint-disable-line\n\n  const hotelID = useSelector(state => state.user.profile.activeHotel);\n  const hotelName = useSelector(state => state.user.profile.activeHotelName);\n\n  async function handleSubmit(data) {\n    const {\n      water_consumption\n    } = data;\n    await api.put(`/annual-plans/${item}`, {\n      hotel_id: hotelID,\n      water_consumption\n    });\n    toast.success('Valor da água cadastrada com sucesso.');\n    handleClose();\n    loadPlanning();\n  }\n\n  useEffect(() => {\n    async function loadData() {\n      const response = await api.get(`/annual-plans/${item}`, {\n        params: {\n          hotel_id: hotelID\n        }\n      });\n      const {\n        data\n      } = response;\n\n      if (data.water_consumption !== 0) {\n        setEdit(true);\n      }\n\n      setInitialData({ ...data\n      });\n      setPlanning(data);\n    }\n\n    loadData();\n  }, [hotelID, item]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"modal__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, isEdit ? React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Editar planejamento\") : React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Incluir planejamento\"), React.createElement(\"button\", {\n    className: \"close\",\n    type: \"button\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"iconDelete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"modal__body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal__group-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"modal__group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Planeje o valor de receita mensal por Unidade\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), \"Habitacional para cada ano.\")), React.createElement(\"div\", {\n    className: \"modal__group-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"modal__group-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Empreendimento\"), React.createElement(\"span\", {\n    className: \"modal__group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, hotelName)), React.createElement(Form, {\n    schema: schema,\n    onSubmit: handleSubmit,\n    initialData: initialData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal__group-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"modal__group-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"M\\xEAs\"), React.createElement(\"span\", {\n    className: \"modal__group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, planning.month_name, \" / \", planning.year)), React.createElement(\"div\", {\n    className: \"form__group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Label, {\n    className: \"label_input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Valor\"), React.createElement(CurrencyInput, {\n    className: \"form__input\",\n    name: \"water_consumption\",\n    onChange: () => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btn btn-add\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, isEdit ? 'Concluir edição' : 'Incluir planejamento'))));\n}\nWaterFormModal.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  item: PropTypes.number,\n  loadPlanning: PropTypes.func.isRequired\n};\nWaterFormModal.defaultProps = {\n  item: null\n};","map":{"version":3,"sources":["C:/Users/henriquet/Desktop/projetos/SIM_WEB/src/pages/PlanejamentoAnual/components/WaterFormModal.js"],"names":["React","useState","useEffect","useSelector","Yup","toast","PropTypes","Form","Icon","CurrencyInput","api","Label","schema","object","shape","water_consumption","number","required","WaterFormModal","handleClose","item","loadPlanning","initialData","setInitialData","isEdit","setEdit","planning","setPlanning","console","log","hotelID","state","user","profile","activeHotel","hotelName","activeHotelName","handleSubmit","data","put","hotel_id","success","loadData","response","get","params","month_name","year","propTypes","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport * as Yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\nimport { Form } from '@rocketseat/unform';\r\n\r\nimport Icon from '../../../components/Icons';\r\nimport CurrencyInput from '../../../components/CurrencyInput';\r\n\r\nimport api from '../../../services/api';\r\n\r\nimport { Label } from '../../../components/Modal/styles';\r\n\r\nconst schema = Yup.object().shape({\r\n  water_consumption: Yup.number()\r\n    // .positive('Valor deve ser maior que 0.')\r\n    .required('Valor é obrigatório.'),\r\n});\r\n\r\nexport default function WaterFormModal({ handleClose, item, loadPlanning }) {\r\n  const [initialData, setInitialData] = useState();\r\n  const [isEdit, setEdit] = useState(false);\r\n  const [planning, setPlanning] = useState([]);\r\n\r\n  console.log('Form data water', item); // eslint-disable-line\r\n\r\n  const hotelID = useSelector(state => state.user.profile.activeHotel);\r\n  const hotelName = useSelector(state => state.user.profile.activeHotelName);\r\n\r\n  async function handleSubmit(data) {\r\n    const { water_consumption } = data;\r\n\r\n    await api.put(`/annual-plans/${item}`, {\r\n      hotel_id: hotelID,\r\n      water_consumption,\r\n    });\r\n\r\n    toast.success('Valor da água cadastrada com sucesso.');\r\n\r\n    handleClose();\r\n    loadPlanning();\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function loadData() {\r\n      const response = await api.get(`/annual-plans/${item}`, {\r\n        params: {\r\n          hotel_id: hotelID,\r\n        },\r\n      });\r\n\r\n      const { data } = response;\r\n\r\n      if (data.water_consumption !== 0) {\r\n        setEdit(true);\r\n      }\r\n\r\n      setInitialData({\r\n        ...data,\r\n      });\r\n\r\n      setPlanning(data);\r\n    }\r\n    loadData();\r\n  }, [hotelID, item]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal__header\">\r\n        {isEdit ? <h3>Editar planejamento</h3> : <h3>Incluir planejamento</h3>}\r\n        <button className=\"close\" type=\"button\" onClick={handleClose}>\r\n          <Icon name=\"iconDelete\" />\r\n        </button>\r\n      </div>\r\n      <div className=\"modal__body\">\r\n        <div className=\"modal__group-info\">\r\n          <span className=\"modal__group-text\">\r\n            Planeje o valor de receita mensal por Unidade\r\n            <br />\r\n            Habitacional para cada ano.\r\n          </span>\r\n        </div>\r\n        <div className=\"modal__group-info\">\r\n          <p className=\"modal__group-title\">Empreendimento</p>\r\n          <span className=\"modal__group-text\">{hotelName}</span>\r\n        </div>\r\n        <Form schema={schema} onSubmit={handleSubmit} initialData={initialData}>\r\n          <div className=\"modal__group-info\">\r\n            <p className=\"modal__group-title\">Mês</p>\r\n            <span className=\"modal__group-text\">\r\n              {planning.month_name} / {planning.year}\r\n            </span>\r\n          </div>\r\n          <div className=\"form__group\">\r\n            <Label className=\"label_input\">Valor</Label>\r\n            <CurrencyInput\r\n              className=\"form__input\"\r\n              name=\"water_consumption\"\r\n              onChange={() => {}}\r\n            />\r\n          </div>\r\n          <button className=\"btn btn-add\" type=\"submit\">\r\n            {isEdit ? 'Concluir edição' : 'Incluir planejamento'}\r\n          </button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nWaterFormModal.propTypes = {\r\n  handleClose: PropTypes.func.isRequired,\r\n  item: PropTypes.number,\r\n  loadPlanning: PropTypes.func.isRequired,\r\n};\r\n\r\nWaterFormModal.defaultProps = {\r\n  item: null,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}