{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henriquet\\\\Desktop\\\\projetos\\\\SIM_WEB\\\\src\\\\components\\\\CurrencyInput\\\\index.js\";\nimport React, { useState, useEffect, useMemo, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useField } from '@rocketseat/unform';\nimport CurrencyInputWrapper from 'react-currency-input';\nimport { getCurrencySymbol } from '../../util/format';\nimport { CurrencyInputContainer } from './styles';\nexport default function CurrencyInput({\n  name,\n  label,\n  onChange,\n  value,\n  ...rest\n}) {\n  const ref = useRef(null);\n  const {\n    fieldName,\n    registerField,\n    defaultValue,\n    error\n  } = useField(name);\n  const [amount, setAmount] = useState(defaultValue);\n  const currency = useMemo(() => getCurrencySymbol(), []);\n  useEffect(() => {\n    setAmount(defaultValue);\n  }, [defaultValue]);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: ref.current,\n      path: 'state.value'\n    });\n  }, [ref.current, fieldName]); // eslint-disable-line\n\n  return React.createElement(CurrencyInputContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, label, React.createElement(CurrencyInputWrapper, Object.assign({\n    id: name,\n    name: name,\n    prefix: `${currency} `,\n    decimalSeparator: \",\",\n    thousandSeparator: \".\",\n    ref: ref,\n    value: value || amount,\n    onChange: onChange\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, error)));\n}\nCurrencyInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string\n};\nCurrencyInput.defaultProps = {\n  label: null,\n  onChange: null,\n  value: null\n};","map":{"version":3,"sources":["C:/Users/henriquet/Desktop/projetos/SIM_WEB/src/components/CurrencyInput/index.js"],"names":["React","useState","useEffect","useMemo","useRef","PropTypes","useField","CurrencyInputWrapper","getCurrencySymbol","CurrencyInputContainer","CurrencyInput","name","label","onChange","value","rest","ref","fieldName","registerField","defaultValue","error","amount","setAmount","currency","current","path","propTypes","string","isRequired","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,EAA8CC,MAA9C,QAA4D,OAA5D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,oBAAP,MAAiC,sBAAjC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AAEA,SAASC,sBAAT,QAAuC,UAAvC;AAEA,eAAe,SAASC,aAAT,CAAuB;AACpCC,EAAAA,IADoC;AAEpCC,EAAAA,KAFoC;AAGpCC,EAAAA,QAHoC;AAIpCC,EAAAA,KAJoC;AAKpC,KAAGC;AALiC,CAAvB,EAMZ;AACD,QAAMC,GAAG,GAAGZ,MAAM,CAAC,IAAD,CAAlB;AACA,QAAM;AAAEa,IAAAA,SAAF;AAAaC,IAAAA,aAAb;AAA4BC,IAAAA,YAA5B;AAA0CC,IAAAA;AAA1C,MAAoDd,QAAQ,CAACK,IAAD,CAAlE;AAEA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAACkB,YAAD,CAApC;AAEA,QAAMI,QAAQ,GAAGpB,OAAO,CAAC,MAAMK,iBAAiB,EAAxB,EAA4B,EAA5B,CAAxB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,SAAS,CAACH,YAAD,CAAT;AACD,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,aAAa,CAAC;AACZP,MAAAA,IAAI,EAAEM,SADM;AAEZD,MAAAA,GAAG,EAAEA,GAAG,CAACQ,OAFG;AAGZC,MAAAA,IAAI,EAAE;AAHM,KAAD,CAAb;AAKD,GANQ,EAMN,CAACT,GAAG,CAACQ,OAAL,EAAcP,SAAd,CANM,CAAT,CAZC,CAkB6B;;AAE9B,SACE,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAEN,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KADH,EAEE,oBAAC,oBAAD;AACE,IAAA,EAAE,EAAED,IADN;AAEE,IAAA,IAAI,EAAEA,IAFR;AAGE,IAAA,MAAM,EAAG,GAAEY,QAAS,GAHtB;AAIE,IAAA,gBAAgB,EAAC,GAJnB;AAKE,IAAA,iBAAiB,EAAC,GALpB;AAME,IAAA,GAAG,EAAEP,GANP;AAOE,IAAA,KAAK,EAAEF,KAAK,IAAIO,MAPlB;AAQE,IAAA,QAAQ,EAAER;AARZ,KASME,IATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAaGK,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,KAAP,CAbZ,CADF,CADF;AAmBD;AAEDV,aAAa,CAACgB,SAAd,GAA0B;AACxBf,EAAAA,IAAI,EAAEN,SAAS,CAACsB,MAAV,CAAiBC,UADC;AAExBhB,EAAAA,KAAK,EAAEP,SAAS,CAACsB,MAFO;AAGxBd,EAAAA,QAAQ,EAAER,SAAS,CAACwB,IAHI;AAIxBf,EAAAA,KAAK,EAAET,SAAS,CAACsB;AAJO,CAA1B;AAOAjB,aAAa,CAACoB,YAAd,GAA6B;AAC3BlB,EAAAA,KAAK,EAAE,IADoB;AAE3BC,EAAAA,QAAQ,EAAE,IAFiB;AAG3BC,EAAAA,KAAK,EAAE;AAHoB,CAA7B","sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { useField } from '@rocketseat/unform';\r\nimport CurrencyInputWrapper from 'react-currency-input';\r\nimport { getCurrencySymbol } from '../../util/format';\r\n\r\nimport { CurrencyInputContainer } from './styles';\r\n\r\nexport default function CurrencyInput({\r\n  name,\r\n  label,\r\n  onChange,\r\n  value,\r\n  ...rest\r\n}) {\r\n  const ref = useRef(null);\r\n  const { fieldName, registerField, defaultValue, error } = useField(name);\r\n\r\n  const [amount, setAmount] = useState(defaultValue);\r\n\r\n  const currency = useMemo(() => getCurrencySymbol(), []);\r\n\r\n  useEffect(() => {\r\n    setAmount(defaultValue);\r\n  }, [defaultValue]);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: ref.current,\r\n      path: 'state.value',\r\n    });\r\n  }, [ref.current, fieldName]); // eslint-disable-line\r\n\r\n  return (\r\n    <CurrencyInputContainer>\r\n      <label htmlFor={name}>\r\n        {label}\r\n        <CurrencyInputWrapper\r\n          id={name}\r\n          name={name}\r\n          prefix={`${currency} `}\r\n          decimalSeparator=\",\"\r\n          thousandSeparator=\".\"\r\n          ref={ref}\r\n          value={value || amount}\r\n          onChange={onChange}\r\n          {...rest}\r\n        />\r\n        {error && <span>{error}</span>}\r\n      </label>\r\n    </CurrencyInputContainer>\r\n  );\r\n}\r\n\r\nCurrencyInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n};\r\n\r\nCurrencyInput.defaultProps = {\r\n  label: null,\r\n  onChange: null,\r\n  value: null,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}