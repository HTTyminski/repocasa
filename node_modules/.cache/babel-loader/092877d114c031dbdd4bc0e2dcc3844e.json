{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henriquet\\\\Desktop\\\\projetos\\\\SIM_WEB\\\\src\\\\pages\\\\Receita\\\\index.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Shimmer from 'react-shimmer-effect';\nimport { toast } from 'react-toastify';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { TableWrapper } from './styles';\nimport { useModal } from '../../hook/useModal';\nimport Icon from '../../components/Icons';\nimport LoadLine from '../../components/LoadLine';\nimport Container from '../../components/Container';\nimport ButtonAdd from '../../components/ButtonAdd';\nimport ConfirmAlert from '../../components/ConfirmAlert';\nimport IncomeFormModal from './components/IncomeFormModal';\nimport TableDropDownCustom from '../../components/TableDropDownCustom';\nimport api from '../../services/api';\nimport { changeDateAction } from '../../store/modules/consumo/receita/actions';\nimport { MonthEnum } from '../../enums/month-enum';\nexport default function Receita() {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [income, setIncome] = useState([]);\n  const [payload, setPayload] = useState({});\n  const {\n    RenderModal: IncomeModalWrapper,\n    ...incomeHook\n  } = useModal();\n  const receita = useSelector(state => state.receita);\n  const hotelID = useSelector(state => state.user.profile.activeHotel);\n  const loadIncome = useCallback(async () => {\n    try {\n      setLoading(true);\n\n      if (receita.date === null) {\n        return;\n      }\n\n      const setYear = receita.date.getFullYear();\n      const response = await api.get('/financial-incomes', {\n        params: {\n          hotel_id: hotelID,\n          year: setYear\n        }\n      });\n      setIncome(response.data);\n    } catch (error) {\n      toast.error('Não foi possível carregar receitas.');\n    }\n\n    setLoading(false);\n  }, [hotelID, receita.date]);\n  useEffect(() => {\n    dispatch(changeDateAction(new Date()));\n  }, []); // eslint-disable-line\n\n  useEffect(() => {\n    document.title = 'SIM - Consumo | Receita';\n    loadIncome();\n  }, [loadIncome]);\n\n  const handleOpenModal = async (modalFn, item) => {\n    const response = await api.get(`/financial-incomes/${item}`, {\n      params: {\n        hotel_id: hotelID\n      }\n    });\n    const {\n      data\n    } = response;\n    setPayload(data);\n    modalFn();\n  };\n\n  async function handleDelete(id, key) {\n    async function deleteIncomes() {\n      try {\n        await api.delete(`/financial-incomes/${id}`, {\n          id // [key]: null,\n\n        });\n        toast.success('Receita mensal excluída com sucesso.');\n        loadIncome();\n      } catch (error) {\n        toast.error('Não foi possível remover a receita mensal selecionada.');\n      }\n    }\n\n    confirmAlert({\n      customUI: ({\n        onClose\n      } // eslint-disable-line\n      ) => React.createElement(ConfirmAlert, {\n        callback: deleteIncomes,\n        onClose: onClose,\n        icon: React.createElement(Icon, {\n          name: \"iconTrash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }),\n        title: \"Deletar receita\",\n        message: React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"Tem certeza que deseja deletar receita mensal?\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    id: \"modal-root\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(IncomeModalWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(IncomeFormModal, {\n    handleClose: incomeHook.hide,\n    item: payload.id,\n    loadIncome: loadIncome,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(Container, {\n    className: \"content full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Receita \", receita.date && receita.date.getFullYear())), React.createElement(TableWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"M\\xEAs\"), React.createElement(\"th\", {\n    colSpan: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Receita\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, loading ? React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    width: \"15%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Shimmer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(LoadLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }))), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Shimmer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(LoadLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })))) : income.map(item => React.createElement(\"tr\", {\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    width: \"75\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, MonthEnum[item.month_name]), !item.income && !item.value ? React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(ButtonAdd, {\n    onClick: () => handleOpenModal(incomeHook.show, item.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"iconPlus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), \"Adicionar\")) : React.createElement(React.Fragment, null, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"R$ \", item.value, React.createElement(TableDropDownCustom, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      handleOpenModal(incomeHook.show, item.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Editar\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      handleDelete(item.id, ['value']);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Excluir\")))))))))));\n}","map":{"version":3,"sources":["C:/Users/henriquet/Desktop/projetos/SIM_WEB/src/pages/Receita/index.js"],"names":["React","useState","useCallback","useEffect","useSelector","useDispatch","Shimmer","toast","confirmAlert","TableWrapper","useModal","Icon","LoadLine","Container","ButtonAdd","ConfirmAlert","IncomeFormModal","TableDropDownCustom","api","changeDateAction","MonthEnum","Receita","dispatch","loading","setLoading","income","setIncome","payload","setPayload","RenderModal","IncomeModalWrapper","incomeHook","receita","state","hotelID","user","profile","activeHotel","loadIncome","date","setYear","getFullYear","response","get","params","hotel_id","year","data","error","Date","document","title","handleOpenModal","modalFn","item","handleDelete","id","key","deleteIncomes","delete","success","customUI","onClose","hide","map","month_name","value","show"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Shimmer from 'react-shimmer-effect';\r\nimport { toast } from 'react-toastify';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nimport { TableWrapper } from './styles';\r\n\r\nimport { useModal } from '../../hook/useModal';\r\n\r\nimport Icon from '../../components/Icons';\r\nimport LoadLine from '../../components/LoadLine';\r\nimport Container from '../../components/Container';\r\nimport ButtonAdd from '../../components/ButtonAdd';\r\nimport ConfirmAlert from '../../components/ConfirmAlert';\r\nimport IncomeFormModal from './components/IncomeFormModal';\r\nimport TableDropDownCustom from '../../components/TableDropDownCustom';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport { changeDateAction } from '../../store/modules/consumo/receita/actions';\r\nimport { MonthEnum } from '../../enums/month-enum';\r\n\r\nexport default function Receita() {\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const [income, setIncome] = useState([]);\r\n  const [payload, setPayload] = useState({});\r\n  const { RenderModal: IncomeModalWrapper, ...incomeHook } = useModal();\r\n\r\n  const receita = useSelector(state => state.receita);\r\n  const hotelID = useSelector(state => state.user.profile.activeHotel);\r\n\r\n  const loadIncome = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      if (receita.date === null) {\r\n        return;\r\n      }\r\n      const setYear = receita.date.getFullYear();\r\n      const response = await api.get('/financial-incomes', {\r\n        params: {\r\n          hotel_id: hotelID,\r\n          year: setYear,\r\n        },\r\n      });\r\n      setIncome(response.data);\r\n    } catch (error) {\r\n      toast.error('Não foi possível carregar receitas.');\r\n    }\r\n    setLoading(false);\r\n  }, [hotelID, receita.date]);\r\n\r\n  useEffect(() => {\r\n    dispatch(changeDateAction(new Date()));\r\n  }, []); // eslint-disable-line\r\n\r\n  useEffect(() => {\r\n    document.title = 'SIM - Consumo | Receita';\r\n\r\n    loadIncome();\r\n  }, [loadIncome]);\r\n\r\n  const handleOpenModal = async (modalFn, item) => {\r\n    const response = await api.get(`/financial-incomes/${item}`, {\r\n      params: {\r\n        hotel_id: hotelID,\r\n      },\r\n    });\r\n\r\n    const { data } = response;\r\n\r\n    setPayload(data);\r\n    modalFn();\r\n  };\r\n\r\n  async function handleDelete(id, key) {\r\n    async function deleteIncomes() {\r\n      try {\r\n        await api.delete(`/financial-incomes/${id}`, {\r\n          id,\r\n          // [key]: null,\r\n        });\r\n\r\n        toast.success('Receita mensal excluída com sucesso.');\r\n\r\n        loadIncome();\r\n      } catch (error) {\r\n        toast.error('Não foi possível remover a receita mensal selecionada.');\r\n      }\r\n    }\r\n\r\n    confirmAlert({\r\n      customUI: (\r\n        { onClose } // eslint-disable-line\r\n      ) => (\r\n        <ConfirmAlert\r\n          callback={deleteIncomes}\r\n          onClose={onClose}\r\n          icon={<Icon name=\"iconTrash\" />}\r\n          title=\"Deletar receita\"\r\n          message={<p>Tem certeza que deseja deletar receita mensal?</p>}\r\n        />\r\n      ),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"modal-root\" />\r\n      <IncomeModalWrapper>\r\n        <IncomeFormModal\r\n          handleClose={incomeHook.hide}\r\n          item={payload.id}\r\n          loadIncome={loadIncome}\r\n        />\r\n      </IncomeModalWrapper>\r\n\r\n      <Container className=\"content full\">\r\n        <div className=\"title\">\r\n          <h1>Receita {receita.date && receita.date.getFullYear()}</h1>\r\n        </div>\r\n        <TableWrapper>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Mês</th>\r\n                <th colSpan=\"2\">Receita</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {loading ? (\r\n                <tr>\r\n                  <td width=\"15%\">\r\n                    <Shimmer>\r\n                      <LoadLine />\r\n                    </Shimmer>\r\n                  </td>\r\n                  <td>\r\n                    <Shimmer>\r\n                      <LoadLine />\r\n                    </Shimmer>\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                income.map(item => (\r\n                  <tr key={item.id}>\r\n                    <td width=\"75\">{MonthEnum[item.month_name]}</td>\r\n                    {!item.income && !item.value ? (\r\n                      <td>\r\n                        <ButtonAdd\r\n                          onClick={() =>\r\n                            handleOpenModal(incomeHook.show, item.id)\r\n                          }\r\n                        >\r\n                          <Icon name=\"iconPlus\" />\r\n                          Adicionar\r\n                        </ButtonAdd>\r\n                      </td>\r\n                    ) : (\r\n                      <>\r\n                        <td>\r\n                          R$ {item.value}\r\n                          <TableDropDownCustom>\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                handleOpenModal(incomeHook.show, item.id);\r\n                              }}\r\n                            >\r\n                              Editar\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                handleDelete(item.id, ['value']);\r\n                              }}\r\n                            >\r\n                              Excluir\r\n                            </button>\r\n                          </TableDropDownCustom>\r\n                        </td>\r\n                      </>\r\n                    )}\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </TableWrapper>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}