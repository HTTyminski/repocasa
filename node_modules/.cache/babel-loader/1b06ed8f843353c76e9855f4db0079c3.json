{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henriquet\\\\Desktop\\\\projetos\\\\SIM_WEB\\\\src\\\\pages\\\\ConsumoGeral\\\\index.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Shimmer from 'react-shimmer-effect';\nimport { toast } from 'react-toastify';\nimport ReactTooltip from 'react-tooltip';\nimport { StyledBoxes, TwoColumns, StyledTitleAction } from './styles';\nimport LoadGraph from '../../components/LoadGraph';\nimport ChartBar from '../../components/ChartBar';\nimport Container from '../../components/Container';\nimport RadioSliding from '../../components/RadioSliding';\nimport api from '../../services/api';\nimport { changeDateAction, selectMultiAction } from '../../store/modules/consumo/generalconsumption/actions';\nexport default function ConsumoGeral() {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [totals, setTotals] = useState([]);\n  const [spentUtilitiesData, setSpentUtilitiesData] = useState([]);\n  const [spentUtilitiesDataNegative, setSpentUtilitiesDataNegative] = useState([]);\n  const [spentUtilitiesDataRne, setspentUtilitiesDataRne] = useState([]);\n  const [spentUtilitiesDataRneNegative, setspentUtilitiesDataRneNegative] = useState([]);\n  const [spentUtilities, setSpentUtilities] = useState([]);\n  const [spentUtilitiesRne, setSpentUtilitiesRne] = useState([]);\n  const [spentsUtilitiesPositive, setSpentsUtilitiesPositive] = useState([]);\n  const [spentsUtilitiesNegative, setSpentsUtilitiesNegative] = useState([]);\n  const [spentsUtilitiesRnePositive, setSpentsUtilitiesRnePositive] = useState([]);\n  const [spentsUtilitiesRneNegative, setSpentsUtilitiesRneNegative] = useState([]);\n  const [isToggleUtilities, setToggle] = useState(true);\n  const [isToggleUtilitiesRne, setToggleRne] = useState(true);\n  const generalconsumption = useSelector(state => state.generalconsumption);\n  const hotelID = useSelector(state => state.user.profile.activeHotel);\n  const hotelActiveName = useSelector(state => state.user.profile.activeHotelName);\n  const loadTotals = useCallback(async () => {\n    try {\n      setLoading(true);\n\n      if (generalconsumption.date && generalconsumption.select) {\n        const hotelID = generalconsumption.select[0].value ? generalconsumption.select[0].value : false;\n\n        if (hotelID) {\n          const setYear = generalconsumption.date.getFullYear();\n          const setMonth = generalconsumption.date.getMonth() + 1;\n          const selectedHotelsParams = new URLSearchParams();\n          generalconsumption.select.forEach(element => {\n            return selectedHotelsParams.append('selected_hotels', element.value);\n          });\n          selectedHotelsParams.append('initial_range_year', setYear);\n          selectedHotelsParams.append('initial_range_month', setMonth);\n          const request = {\n            params: selectedHotelsParams\n          };\n          const response = await api.get(`/general-consumption-totals`, request);\n          setTotals(response.data);\n        }\n      }\n    } catch (error) {\n      toast.error('Não foi possível carregar consumo geral.');\n      console.error('LoadTotals error: ', error);\n    }\n\n    setLoading(false);\n  }, [generalconsumption.date, generalconsumption.select]);\n  const loadSpentUtilities = useCallback(async () => {\n    try {\n      setLoading(true);\n\n      if (generalconsumption.date && generalconsumption.select) {\n        const hotelID = generalconsumption.select[0].value ? generalconsumption.select[0].value : false;\n\n        if (hotelID) {\n          const setYear = generalconsumption.date.getFullYear();\n          const setMonth = generalconsumption.date.getMonth() + 1;\n          const selectedHotelsParams = new URLSearchParams();\n          generalconsumption.select.forEach(element => {\n            return selectedHotelsParams.append('selected_hotels', element.value);\n          });\n          selectedHotelsParams.append('year', setYear);\n          selectedHotelsParams.append('month', setMonth);\n          selectedHotelsParams.append('order', 1);\n          const requestP = {\n            params: selectedHotelsParams\n          };\n          const responsePositive = await api.get(`/utilities-spent`, requestP);\n          selectedHotelsParams.set('order', 2);\n          const requestN = {\n            params: selectedHotelsParams\n          };\n          const responseNegative = await api.get(`/utilities-spent`, requestN);\n          setSpentUtilitiesData(responsePositive.data);\n          setSpentUtilitiesDataNegative(responseNegative.data);\n        }\n      }\n    } catch (error) {\n      toast.error('Não foi possível carregar despesas com utilities.');\n      console.error('LoadTotals error: ', error);\n    }\n\n    setLoading(false);\n  }, [generalconsumption.date, generalconsumption.select]);\n  const loadUtilitiesRneSpentVsBudgeted = useCallback(async () => {\n    try {\n      setLoading(true);\n\n      if (generalconsumption.date && generalconsumption.select) {\n        const hotelID = generalconsumption.select[0].value ? generalconsumption.select[0].value : false;\n\n        if (hotelID) {\n          const setYear = generalconsumption.date.getFullYear();\n          const setMonth = generalconsumption.date.getMonth() + 1;\n          const selectedHotelsParams = new URLSearchParams();\n          generalconsumption.select.forEach(element => {\n            return selectedHotelsParams.append('selected_hotels', element.value);\n          });\n          selectedHotelsParams.append('year', setYear);\n          selectedHotelsParams.append('month', setMonth);\n          selectedHotelsParams.append('order', 1);\n          const requestP = {\n            params: selectedHotelsParams\n          };\n          const responsePositive = await api.get(`/utilities-rne`, requestP);\n          selectedHotelsParams.set('order', 2);\n          const requestN = {\n            params: selectedHotelsParams\n          };\n          const responseNegative = await api.get(`/utilities-rne`, requestN);\n          setspentUtilitiesDataRne(responsePositive.data);\n          setspentUtilitiesDataRneNegative(responseNegative.data);\n        }\n      }\n    } catch (error) {\n      toast.error('Não foi possível carregar despesas com utilities.');\n      console.error('LoadTotals error: ', error);\n    }\n\n    setLoading(false);\n  }, [generalconsumption.date, generalconsumption.select]);\n  useEffect(() => {\n    loadSpentUtilities();\n  }, [loadSpentUtilities]);\n  useEffect(() => {\n    loadUtilitiesRneSpentVsBudgeted();\n  }, [loadUtilitiesRneSpentVsBudgeted]);\n  useEffect(() => {\n    dispatch(changeDateAction(new Date()));\n    dispatch(selectMultiAction([{\n      value: Number(hotelID),\n      label: hotelActiveName\n    }]));\n  }, []); // eslint-disable-line\n\n  useEffect(() => {\n    document.title = 'SIM - Consumo | Consumo Geral';\n    if (!generalconsumption.select) return;\n    loadTotals();\n  }, [generalconsumption.select, loadTotals]);\n  const currencyBRoptions = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          callback: function (value) {\n            return 'R$ ' + value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n          }\n        }\n      }]\n    },\n    legend: {\n      display: true,\n      position: 'bottom',\n      labels: {\n        usePointStyle: true\n      }\n    }\n  };\n  const setSpentUtilitiesChart = useCallback(async () => {\n    const dataChart = {\n      data: {\n        labels: [''],\n        datasets: [{\n          label: 'Realizado',\n          data: [totals[0] && totals[0].spent],\n          backgroundColor: ['rgba(0, 48, 94, 0.9)'],\n          categoryPercentage: 1.0,\n          maxBarThickness: 75\n        }, {\n          label: 'Orçado',\n          data: [totals[0] && totals[0].budgeted],\n          backgroundColor: ['rgba(227, 231, 255, 0.9)'],\n          categoryPercentage: 1.0,\n          maxBarThickness: 75\n        }]\n      },\n      options: currencyBRoptions\n    };\n    setSpentUtilities([dataChart]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [totals]);\n  useEffect(() => {\n    setSpentUtilitiesChart();\n  }, [setSpentUtilitiesChart]);\n  const setUtilitiesRneChart = useCallback(async () => {\n    const dataChart = {\n      data: {\n        labels: [''],\n        datasets: [{\n          label: 'Realizado',\n          data: [totals[0] && totals[1].spent],\n          backgroundColor: ['rgba(0, 48, 94, 0.9)'],\n          maxBarThickness: 75\n        }, {\n          label: 'Orçado',\n          data: [totals[0] && totals[1].budgeted],\n          backgroundColor: ['rgba(227, 231, 255, 0.9)'],\n          maxBarThickness: 75\n        }]\n      },\n      options: currencyBRoptions\n    };\n    setSpentUtilitiesRne([dataChart]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [totals]);\n  useEffect(() => {\n    setUtilitiesRneChart();\n  }, [setUtilitiesRneChart]);\n  const optionsBarsWithSliding = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          callback: function (value) {\n            return value + \"%\";\n          }\n        },\n        scaleLabel: {\n          display: true,\n          labelString: \"Percentage\"\n        }\n      }]\n    },\n    legend: {\n      display: true,\n      position: 'bottom',\n      labels: {\n        usePointStyle: true\n      }\n    }\n  };\n  const setSpentsUtilitiesChartPositive = useCallback(async () => {\n    const dataSpentsUtilities = [];\n    const labelsUtilities = [];\n\n    for (let key in spentUtilitiesData) {\n      if (spentUtilitiesData[key].difference > 0) {\n        dataSpentsUtilities.push(spentUtilitiesData[key] && spentUtilitiesData[key].difference);\n        labelsUtilities.push(spentUtilitiesData[key] && spentUtilitiesData[key].hotel_initials);\n      }\n    }\n\n    const mountChart = {\n      data: {\n        labels: labelsUtilities,\n        datasets: [{\n          label: 'Utilities',\n          data: dataSpentsUtilities,\n          backgroundColor: 'rgba(0, 48, 94, 0.9)',\n          maxBarThickness: 75\n        }]\n      },\n      options: optionsBarsWithSliding\n    };\n    setSpentsUtilitiesPositive([mountChart]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [spentUtilitiesData]);\n  useEffect(() => {\n    setSpentsUtilitiesChartPositive();\n  }, [setSpentsUtilitiesChartPositive]);\n  const setSpentsUtilitiesChartNegative = useCallback(async () => {\n    const dataSpentsUtilities = [];\n    const labelsUtilities = [];\n\n    for (let key in spentUtilitiesDataNegative) {\n      if (spentUtilitiesDataNegative[key].difference < 0) {\n        dataSpentsUtilities.push(spentUtilitiesDataNegative[key] && spentUtilitiesDataNegative[key].difference);\n        labelsUtilities.push(spentUtilitiesDataNegative[key] && spentUtilitiesDataNegative[key].hotel_initials);\n      }\n    }\n\n    const mountChart = {\n      data: {\n        labels: labelsUtilities,\n        datasets: [{\n          label: 'Utilities',\n          data: dataSpentsUtilities,\n          backgroundColor: 'rgba(0, 48, 94, 0.9)',\n          maxBarThickness: 75\n        }]\n      },\n      options: optionsBarsWithSliding\n    };\n    setSpentsUtilitiesNegative([mountChart]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [spentUtilitiesDataNegative]);\n  useEffect(() => {\n    setSpentsUtilitiesChartNegative();\n  }, [setSpentsUtilitiesChartNegative]);\n  const setSpentsUtilitiesRneChartPositive = useCallback(async () => {\n    const dataSpentsUtilitiesRne = [];\n    const labelsUtilities = [];\n\n    for (let key in spentUtilitiesDataRne) {\n      if (spentUtilitiesDataRne[key].difference > 0) {\n        dataSpentsUtilitiesRne.push(spentUtilitiesDataRne[key] && spentUtilitiesDataRne[key].difference);\n        labelsUtilities.push(spentUtilitiesDataRne[key] && spentUtilitiesDataRne[key].hotel_initial);\n      }\n    }\n\n    const mountChart = {\n      data: {\n        labels: labelsUtilities,\n        datasets: [{\n          label: 'Utilities / RNE',\n          data: dataSpentsUtilitiesRne,\n          backgroundColor: 'rgba(0, 48, 94, 0.9)',\n          maxBarThickness: 75\n        }]\n      },\n      options: optionsBarsWithSliding\n    };\n    setSpentsUtilitiesRnePositive([mountChart]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [spentUtilitiesDataRne]);\n  useEffect(() => {\n    setSpentsUtilitiesRneChartPositive();\n  }, [setSpentsUtilitiesRneChartPositive]);\n  const setSpentsUtilitiesRneChartNegative = useCallback(async () => {\n    const dataSpentsUtilities = [];\n    const labelsUtilities = [];\n\n    for (let key in spentUtilitiesDataRneNegative) {\n      if (spentUtilitiesDataRneNegative[key].difference < 0) {\n        dataSpentsUtilities.push(spentUtilitiesDataRneNegative[key] && spentUtilitiesDataRneNegative[key].difference);\n        labelsUtilities.push(spentUtilitiesDataRneNegative[key] && spentUtilitiesDataRneNegative[key].hotel_initial);\n      }\n    }\n\n    const mountChart = {\n      data: {\n        labels: labelsUtilities,\n        datasets: [{\n          label: 'Utilities',\n          data: dataSpentsUtilities,\n          backgroundColor: 'rgba(0, 48, 94, 0.9)',\n          maxBarThickness: 75\n        }]\n      },\n      options: optionsBarsWithSliding\n    };\n    setSpentsUtilitiesRneNegative([mountChart]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [spentUtilitiesDataRneNegative]);\n  useEffect(() => {\n    setSpentsUtilitiesRneChartNegative();\n  }, [setSpentsUtilitiesRneChartNegative]);\n\n  function toggle() {\n    setToggle(!isToggleUtilities);\n  }\n\n  function toggleRne() {\n    setToggleRne(!isToggleUtilitiesRne);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(StyledBoxes, {\n    className: \"box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  }, totals.map(item => React.createElement(\"div\", {\n    key: item.type,\n    className: \"box__item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"box__item-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399\n    },\n    __self: this\n  }, item.type), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: `arrow consumption-${item.difference > 0 ? 'up' : 'down'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401\n    },\n    __self: this\n  }), item.difference, \"%\")), React.createElement(\"div\", {\n    className: \"box__item-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"icon icon--budget\",\n    \"data-tip\": \"Or\\xE7ado\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411\n    },\n    __self: this\n  }, React.createElement(ReactTooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413\n    },\n    __self: this\n  })), item.budgeted_formatted), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"icon icon--fulfilled\",\n    \"data-tip\": \"Realizado\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"letter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419\n    },\n    __self: this\n  }, \"R\")), item.spent_formatted))))), React.createElement(TwoColumns, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427\n    },\n    __self: this\n  }, React.createElement(Container, {\n    className: \"content full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  }, React.createElement(StyledTitleAction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chart-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }, \"Gasto | Utilities\")), loading ? React.createElement(Shimmer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435\n    },\n    __self: this\n  }, React.createElement(LoadGraph, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436\n    },\n    __self: this\n  })) : spentUtilities.map(item => React.createElement(ChartBar, {\n    key: item.data,\n    displayTitle: false,\n    displayLegend: true,\n    data: item.data,\n    options: item.options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439\n    },\n    __self: this\n  }))), React.createElement(Container, {\n    className: \"content full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449\n    },\n    __self: this\n  }, React.createElement(StyledTitleAction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chart-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451\n    },\n    __self: this\n  }, \"Utilities x RNE\", ' ')), loading ? React.createElement(Shimmer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456\n    },\n    __self: this\n  }, React.createElement(LoadGraph, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457\n    },\n    __self: this\n  })) : spentUtilitiesRne.map(item => React.createElement(ChartBar, {\n    key: item.data,\n    displayTitle: false,\n    displayLegend: true,\n    data: item.data,\n    options: item.options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460\n    },\n    __self: this\n  })))), React.createElement(Container, {\n    className: \"content full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471\n    },\n    __self: this\n  }, React.createElement(StyledTitleAction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chart-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473\n    },\n    __self: this\n  }, \"Despesas com Utilities \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474\n    },\n    __self: this\n  }, \"Valores Realizados x Or\\xE7ados\"))), React.createElement(RadioSliding, {\n    name: \"isToggleUtilities\",\n    changeRadio: toggle,\n    icon: false,\n    opOne: \"+10\",\n    opTwo: \"-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477\n    },\n    __self: this\n  }), loading ? React.createElement(Shimmer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485\n    },\n    __self: this\n  }, React.createElement(LoadGraph, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486\n    },\n    __self: this\n  })) : isToggleUtilities ? spentsUtilitiesPositive.map(item => React.createElement(ChartBar, {\n    key: item.data,\n    displayTitle: false,\n    displayLegend: true,\n    data: item.data,\n    options: item.options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491\n    },\n    __self: this\n  })) : spentsUtilitiesNegative.map(item => React.createElement(ChartBar, {\n    key: item.data,\n    displayTitle: false,\n    displayLegend: true,\n    data: item.data,\n    options: item.options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501\n    },\n    __self: this\n  }))), React.createElement(Container, {\n    className: \"content full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512\n    },\n    __self: this\n  }, React.createElement(StyledTitleAction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chart-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514\n    },\n    __self: this\n  }, \"Valor Utilities / RNE \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515\n    },\n    __self: this\n  }, \"Valores Realizados x Or\\xE7ados\"))), React.createElement(RadioSliding, {\n    name: \"isToggleUtilitiesRne\",\n    changeRadio: toggleRne,\n    icon: false,\n    opOne: \"+10\",\n    opTwo: \"-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518\n    },\n    __self: this\n  }), loading ? React.createElement(Shimmer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526\n    },\n    __self: this\n  }, React.createElement(LoadGraph, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527\n    },\n    __self: this\n  })) : isToggleUtilitiesRne ? spentsUtilitiesRnePositive.map(item => React.createElement(ChartBar, {\n    key: item.data,\n    displayTitle: false,\n    displayLegend: true,\n    data: item.data,\n    options: item.options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532\n    },\n    __self: this\n  })) : spentsUtilitiesRneNegative.map(item => React.createElement(ChartBar, {\n    key: item.data,\n    displayTitle: false,\n    displayLegend: true,\n    data: item.data,\n    options: item.options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["C:/Users/henriquet/Desktop/projetos/SIM_WEB/src/pages/ConsumoGeral/index.js"],"names":["React","useState","useEffect","useCallback","useSelector","useDispatch","Shimmer","toast","ReactTooltip","StyledBoxes","TwoColumns","StyledTitleAction","LoadGraph","ChartBar","Container","RadioSliding","api","changeDateAction","selectMultiAction","ConsumoGeral","dispatch","loading","setLoading","totals","setTotals","spentUtilitiesData","setSpentUtilitiesData","spentUtilitiesDataNegative","setSpentUtilitiesDataNegative","spentUtilitiesDataRne","setspentUtilitiesDataRne","spentUtilitiesDataRneNegative","setspentUtilitiesDataRneNegative","spentUtilities","setSpentUtilities","spentUtilitiesRne","setSpentUtilitiesRne","spentsUtilitiesPositive","setSpentsUtilitiesPositive","spentsUtilitiesNegative","setSpentsUtilitiesNegative","spentsUtilitiesRnePositive","setSpentsUtilitiesRnePositive","spentsUtilitiesRneNegative","setSpentsUtilitiesRneNegative","isToggleUtilities","setToggle","isToggleUtilitiesRne","setToggleRne","generalconsumption","state","hotelID","user","profile","activeHotel","hotelActiveName","activeHotelName","loadTotals","date","select","value","setYear","getFullYear","setMonth","getMonth","selectedHotelsParams","URLSearchParams","forEach","element","append","request","params","response","get","data","error","console","loadSpentUtilities","requestP","responsePositive","set","requestN","responseNegative","loadUtilitiesRneSpentVsBudgeted","Date","Number","label","document","title","currencyBRoptions","scales","yAxes","ticks","callback","toString","replace","legend","display","position","labels","usePointStyle","setSpentUtilitiesChart","dataChart","datasets","spent","backgroundColor","categoryPercentage","maxBarThickness","budgeted","options","setUtilitiesRneChart","optionsBarsWithSliding","scaleLabel","labelString","setSpentsUtilitiesChartPositive","dataSpentsUtilities","labelsUtilities","key","difference","push","hotel_initials","mountChart","setSpentsUtilitiesChartNegative","setSpentsUtilitiesRneChartPositive","dataSpentsUtilitiesRne","hotel_initial","setSpentsUtilitiesRneChartNegative","toggle","toggleRne","map","item","type","budgeted_formatted","spent_formatted"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Shimmer from 'react-shimmer-effect';\r\nimport { toast } from 'react-toastify';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport { StyledBoxes, TwoColumns, StyledTitleAction } from './styles';\r\n\r\nimport LoadGraph from '../../components/LoadGraph';\r\nimport ChartBar from '../../components/ChartBar';\r\nimport Container from '../../components/Container';\r\nimport RadioSliding from '../../components/RadioSliding';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport {\r\n  changeDateAction,\r\n  selectMultiAction,\r\n} from '../../store/modules/consumo/generalconsumption/actions';\r\n\r\nexport default function ConsumoGeral() {\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const [totals, setTotals] = useState([]);\r\n  const [spentUtilitiesData, setSpentUtilitiesData] = useState([]);\r\n  const [spentUtilitiesDataNegative, setSpentUtilitiesDataNegative] = useState([]);\r\n  const [spentUtilitiesDataRne, setspentUtilitiesDataRne] = useState([]);\r\n  const [spentUtilitiesDataRneNegative, setspentUtilitiesDataRneNegative] = useState([]);\r\n\r\n  const [spentUtilities, setSpentUtilities] = useState([]);\r\n  const [spentUtilitiesRne, setSpentUtilitiesRne] = useState([]);\r\n  const [spentsUtilitiesPositive, setSpentsUtilitiesPositive] = useState([]);\r\n  const [spentsUtilitiesNegative, setSpentsUtilitiesNegative] = useState([]);\r\n  const [spentsUtilitiesRnePositive, setSpentsUtilitiesRnePositive] = useState([]);\r\n  const [spentsUtilitiesRneNegative, setSpentsUtilitiesRneNegative] = useState([]);\r\n  const [isToggleUtilities, setToggle] = useState(true);\r\n  const [isToggleUtilitiesRne, setToggleRne] = useState(true);\r\n\r\n  const generalconsumption = useSelector(state => state.generalconsumption);\r\n  const hotelID = useSelector(state => state.user.profile.activeHotel);\r\n  const hotelActiveName = useSelector(\r\n    state => state.user.profile.activeHotelName\r\n  );\r\n\r\n  const loadTotals = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      if(generalconsumption.date && generalconsumption.select){\r\n        const hotelID = generalconsumption.select[0].value ? generalconsumption.select[0].value : false;\r\n        if(hotelID){\r\n          const setYear = generalconsumption.date.getFullYear();\r\n          const setMonth = generalconsumption.date.getMonth() + 1;\r\n          const selectedHotelsParams = new URLSearchParams();\r\n          generalconsumption.select.forEach(element => {\r\n            return selectedHotelsParams.append('selected_hotels', element.value);\r\n          });\r\n          selectedHotelsParams.append('initial_range_year', setYear);\r\n          selectedHotelsParams.append('initial_range_month', setMonth);\r\n          const request = { params: selectedHotelsParams };\r\n          const response = await api.get(`/general-consumption-totals`, request);\r\n          setTotals(response.data);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      toast.error('Não foi possível carregar consumo geral.');\r\n      console.error('LoadTotals error: ', error);\r\n    }\r\n    setLoading(false);\r\n  }, [generalconsumption.date, generalconsumption.select]);\r\n\r\n  const loadSpentUtilities = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      if(generalconsumption.date && generalconsumption.select){\r\n        const hotelID = generalconsumption.select[0].value ? generalconsumption.select[0].value : false;\r\n        if(hotelID){\r\n          const setYear = generalconsumption.date.getFullYear();\r\n          const setMonth = generalconsumption.date.getMonth() + 1;\r\n          const selectedHotelsParams = new URLSearchParams();\r\n          generalconsumption.select.forEach(element => {\r\n            return selectedHotelsParams.append('selected_hotels', element.value);\r\n          });\r\n          selectedHotelsParams.append('year', setYear);\r\n          selectedHotelsParams.append('month', setMonth);\r\n          selectedHotelsParams.append('order', 1);\r\n          const requestP = { params: selectedHotelsParams };\r\n          const responsePositive = await api.get(`/utilities-spent`, requestP);\r\n          selectedHotelsParams.set('order', 2);\r\n          const requestN = { params: selectedHotelsParams };\r\n          const responseNegative = await api.get(`/utilities-spent`, requestN);\r\n          setSpentUtilitiesData(responsePositive.data);\r\n          setSpentUtilitiesDataNegative(responseNegative.data);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      toast.error('Não foi possível carregar despesas com utilities.');\r\n      console.error('LoadTotals error: ', error);\r\n    }\r\n    setLoading(false);\r\n  }, [generalconsumption.date, generalconsumption.select]);\r\n\r\n  const loadUtilitiesRneSpentVsBudgeted = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      if(generalconsumption.date && generalconsumption.select){\r\n        const hotelID = generalconsumption.select[0].value ? generalconsumption.select[0].value : false;\r\n        if(hotelID){\r\n          const setYear = generalconsumption.date.getFullYear();\r\n          const setMonth = generalconsumption.date.getMonth() + 1;\r\n          const selectedHotelsParams = new URLSearchParams();\r\n          generalconsumption.select.forEach(element => {\r\n            return selectedHotelsParams.append('selected_hotels', element.value);\r\n          });\r\n          selectedHotelsParams.append('year', setYear);\r\n          selectedHotelsParams.append('month', setMonth);\r\n          selectedHotelsParams.append('order', 1);\r\n          const requestP = { params: selectedHotelsParams };\r\n          const responsePositive = await api.get(`/utilities-rne`, requestP);\r\n          selectedHotelsParams.set('order', 2);\r\n          const requestN = { params: selectedHotelsParams };\r\n          const responseNegative = await api.get(`/utilities-rne`, requestN);\r\n          setspentUtilitiesDataRne(responsePositive.data);\r\n          setspentUtilitiesDataRneNegative(responseNegative.data);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      toast.error('Não foi possível carregar despesas com utilities.');\r\n      console.error('LoadTotals error: ', error);\r\n    }\r\n    setLoading(false);\r\n  }, [generalconsumption.date, generalconsumption.select]);\r\n\r\n  useEffect(() => {\r\n    loadSpentUtilities();\r\n  }, [loadSpentUtilities]);\r\n\r\n  useEffect(() => {\r\n    loadUtilitiesRneSpentVsBudgeted();\r\n  }, [loadUtilitiesRneSpentVsBudgeted]);\r\n\r\n  useEffect(() => {\r\n    dispatch(changeDateAction(new Date()));\r\n    dispatch(\r\n      selectMultiAction([{ value: Number(hotelID), label: hotelActiveName }])\r\n    );\r\n  }, []); // eslint-disable-line\r\n\r\n  useEffect(() => {\r\n    document.title = 'SIM - Consumo | Consumo Geral';\r\n    if (!generalconsumption.select) return;\r\n    loadTotals();\r\n  }, [generalconsumption.select, loadTotals]);\r\n\r\n  const currencyBRoptions = { \r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            callback: function (value) {\r\n              return 'R$ ' + value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n            },\r\n          }\r\n        },\r\n      ]\r\n    },\r\n    legend: {\r\n      display: true,\r\n      position: 'bottom',\r\n      labels: {\r\n        usePointStyle:true\r\n      }\r\n    }\r\n  };\r\n\r\n  const setSpentUtilitiesChart = useCallback(async () => {\r\n    const dataChart = {\r\n      data: {\r\n        labels: [''],\r\n        datasets: [\r\n          {\r\n            label: 'Realizado',\r\n            data: [totals[0] && totals[0].spent],\r\n            backgroundColor: ['rgba(0, 48, 94, 0.9)'],\r\n            categoryPercentage: 1.0,\r\n            maxBarThickness: 75\r\n          },\r\n          {\r\n            label: 'Orçado',\r\n            data: [totals[0] && totals[0].budgeted],\r\n            backgroundColor: ['rgba(227, 231, 255, 0.9)'],\r\n            categoryPercentage: 1.0,\r\n            maxBarThickness: 75\r\n          }\r\n        ],\r\n      },\r\n      options: currencyBRoptions\r\n    };\r\n    setSpentUtilities([dataChart]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [totals]);\r\n\r\n  useEffect(() => {\r\n    setSpentUtilitiesChart();\r\n  }, [setSpentUtilitiesChart]);\r\n\r\n  const setUtilitiesRneChart = useCallback(async () => {\r\n    const dataChart = {\r\n      data: {\r\n        labels: [''],\r\n        datasets: [\r\n          {\r\n            label: 'Realizado',\r\n            data: [totals[0] && totals[1].spent],\r\n            backgroundColor: ['rgba(0, 48, 94, 0.9)'],\r\n            maxBarThickness: 75\r\n          },\r\n          {\r\n            label: 'Orçado',\r\n            data: [totals[0] && totals[1].budgeted],\r\n            backgroundColor: ['rgba(227, 231, 255, 0.9)'],\r\n            maxBarThickness: 75\r\n          },\r\n        ],\r\n      },\r\n      options: currencyBRoptions\r\n    };\r\n    setSpentUtilitiesRne([dataChart]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [totals]);\r\n\r\n  useEffect(() => {\r\n    setUtilitiesRneChart();\r\n  }, [setUtilitiesRneChart]);\r\n\r\n  const optionsBarsWithSliding = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            callback: function(value) {\r\n              return value + \"%\"\r\n            }\r\n          },\r\n          scaleLabel: {\r\n              display: true,\r\n              labelString: \"Percentage\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    legend: {\r\n      display: true,\r\n      position: 'bottom',\r\n      labels: {\r\n        usePointStyle:true\r\n      }\r\n    }\r\n  };\r\n    \r\n  const setSpentsUtilitiesChartPositive = useCallback(async () => {\r\n    const dataSpentsUtilities = [];\r\n    const labelsUtilities = [];\r\n    for (let key in spentUtilitiesData) {\r\n      if (spentUtilitiesData[key].difference > 0) {\r\n        dataSpentsUtilities.push(spentUtilitiesData[key] && spentUtilitiesData[key].difference);\r\n        labelsUtilities.push(spentUtilitiesData[key] && spentUtilitiesData[key].hotel_initials);\r\n      }\r\n    }\r\n    const mountChart = {\r\n      data: {\r\n        labels: labelsUtilities,\r\n        datasets: [\r\n          {\r\n            label: 'Utilities',\r\n            data: dataSpentsUtilities,\r\n            backgroundColor: 'rgba(0, 48, 94, 0.9)',\r\n            maxBarThickness: 75\r\n          },\r\n        ],\r\n      },\r\n      options: optionsBarsWithSliding\r\n    }\r\n    setSpentsUtilitiesPositive([mountChart]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [spentUtilitiesData]);\r\n\r\n  useEffect(() => {\r\n    setSpentsUtilitiesChartPositive();\r\n  }, [setSpentsUtilitiesChartPositive]);\r\n\r\n  const setSpentsUtilitiesChartNegative = useCallback(async () => {\r\n    const dataSpentsUtilities = [];\r\n    const labelsUtilities = [];\r\n    for (let key in spentUtilitiesDataNegative) {\r\n      if (spentUtilitiesDataNegative[key].difference < 0) {\r\n        dataSpentsUtilities.push(spentUtilitiesDataNegative[key] && spentUtilitiesDataNegative[key].difference);\r\n        labelsUtilities.push(spentUtilitiesDataNegative[key] && spentUtilitiesDataNegative[key].hotel_initials);\r\n      }\r\n    }\r\n    const mountChart = {\r\n      data: {\r\n        labels: labelsUtilities,\r\n        datasets: [\r\n          {\r\n            label: 'Utilities',\r\n            data: dataSpentsUtilities,\r\n            backgroundColor: 'rgba(0, 48, 94, 0.9)',\r\n            maxBarThickness: 75\r\n          },\r\n        ],\r\n      },\r\n      options: optionsBarsWithSliding\r\n    }\r\n    setSpentsUtilitiesNegative([mountChart]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [spentUtilitiesDataNegative]);\r\n\r\n  useEffect(() => {\r\n    setSpentsUtilitiesChartNegative();\r\n  }, [setSpentsUtilitiesChartNegative]);\r\n\r\n  const setSpentsUtilitiesRneChartPositive = useCallback(async () => {\r\n    const dataSpentsUtilitiesRne = [];\r\n    const labelsUtilities = [];\r\n    for (let key in spentUtilitiesDataRne) {\r\n      if (spentUtilitiesDataRne[key].difference > 0) {\r\n        dataSpentsUtilitiesRne.push(spentUtilitiesDataRne[key] && spentUtilitiesDataRne[key].difference);\r\n        labelsUtilities.push(spentUtilitiesDataRne[key] && spentUtilitiesDataRne[key].hotel_initial);\r\n      }\r\n    }\r\n    const mountChart = {\r\n      data: {\r\n        labels: labelsUtilities,\r\n        datasets: [\r\n          {\r\n            label: 'Utilities / RNE',\r\n            data: dataSpentsUtilitiesRne,\r\n            backgroundColor: 'rgba(0, 48, 94, 0.9)',\r\n            maxBarThickness: 75\r\n          },\r\n        ],\r\n      },\r\n      options: optionsBarsWithSliding\r\n    }\r\n    setSpentsUtilitiesRnePositive([mountChart]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [spentUtilitiesDataRne]);\r\n\r\n  useEffect(() => {\r\n    setSpentsUtilitiesRneChartPositive();\r\n  }, [setSpentsUtilitiesRneChartPositive]);\r\n\r\n  const setSpentsUtilitiesRneChartNegative = useCallback(async () => {\r\n    const dataSpentsUtilities = [];\r\n    const labelsUtilities = [];\r\n    for (let key in spentUtilitiesDataRneNegative) {\r\n      if (spentUtilitiesDataRneNegative[key].difference < 0) {\r\n        dataSpentsUtilities.push(spentUtilitiesDataRneNegative[key] && spentUtilitiesDataRneNegative[key].difference);\r\n        labelsUtilities.push(spentUtilitiesDataRneNegative[key] && spentUtilitiesDataRneNegative[key].hotel_initial);\r\n      }\r\n    }\r\n    const mountChart = {\r\n      data: {\r\n        labels: labelsUtilities,\r\n        datasets: [\r\n          {\r\n            label: 'Utilities',\r\n            data: dataSpentsUtilities,\r\n            backgroundColor: 'rgba(0, 48, 94, 0.9)',\r\n            maxBarThickness: 75\r\n          },\r\n        ],\r\n      },\r\n      options: optionsBarsWithSliding\r\n    }\r\n    setSpentsUtilitiesRneNegative([mountChart]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [spentUtilitiesDataRneNegative]);\r\n\r\n  useEffect(() => {\r\n    setSpentsUtilitiesRneChartNegative();\r\n  }, [setSpentsUtilitiesRneChartNegative]);\r\n\r\n\r\n  function toggle() {\r\n    setToggle(!isToggleUtilities);\r\n  }\r\n\r\n  function toggleRne() {\r\n    setToggleRne(!isToggleUtilitiesRne);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledBoxes className=\"box\">\r\n        {totals.map(item => (\r\n          <div key={item.type} className=\"box__item\">\r\n            <div className=\"box__item-left\">\r\n              <h3>{item.type}</h3>\r\n              <span>\r\n                <span\r\n                  className={`arrow consumption-${\r\n                    item.difference > 0 ? 'up' : 'down'\r\n                  }`}\r\n                />\r\n                {item.difference}%\r\n              </span>\r\n            </div>\r\n            <div className=\"box__item-right\">\r\n              <div>\r\n                <span className=\"icon icon--budget\" data-tip=\"Orçado\">\r\n                  <ReactTooltip />\r\n                  <span className=\"circle\" />\r\n                </span>\r\n                {item.budgeted_formatted}\r\n              </div>\r\n              <div>\r\n                <span className=\"icon icon--fulfilled\" data-tip=\"Realizado\">\r\n                  <span className=\"letter\">R</span>\r\n                </span>\r\n                {item.spent_formatted}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </StyledBoxes>\r\n      <TwoColumns>\r\n        <Container className=\"content full\">\r\n          <StyledTitleAction>\r\n            <div className=\"chart-title\">\r\n              Gasto | Utilities\r\n            </div>\r\n          </StyledTitleAction>\r\n          {loading ? (\r\n            <Shimmer>\r\n              <LoadGraph />\r\n            </Shimmer>\r\n          ) : (spentUtilities.map(item => (\r\n            <ChartBar\r\n              key={item.data}\r\n              displayTitle={false}\r\n              displayLegend\r\n              data={item.data}\r\n              options={item.options}\r\n            />\r\n            ))\r\n          )}\r\n        </Container>\r\n        <Container className=\"content full\">\r\n          <StyledTitleAction>\r\n            <div className=\"chart-title\">\r\n              Utilities x RNE{' '}\r\n            </div>\r\n          </StyledTitleAction>\r\n          {loading ? (\r\n            <Shimmer>\r\n              <LoadGraph />\r\n            </Shimmer>\r\n          ) : (spentUtilitiesRne.map(item => (\r\n              <ChartBar\r\n                key={item.data}\r\n                displayTitle={false}\r\n                displayLegend\r\n                data={item.data}\r\n                options={item.options}\r\n              />\r\n            ))\r\n          )}\r\n        </Container>\r\n      </TwoColumns>\r\n      <Container className=\"content full\">\r\n        <StyledTitleAction>\r\n          <div className=\"chart-title\">\r\n            Despesas com Utilities <span>Valores Realizados x Orçados</span>\r\n          </div>\r\n        </StyledTitleAction>\r\n        <RadioSliding \r\n          name=\"isToggleUtilities\"\r\n          changeRadio={ toggle }\r\n          icon={false}\r\n          opOne=\"+10\"\r\n          opTwo=\"-10\"\r\n        />\r\n        {loading ? (\r\n            <Shimmer>\r\n              <LoadGraph />\r\n            </Shimmer>\r\n          ) : (\r\n            isToggleUtilities ? (\r\n              spentsUtilitiesPositive.map(item => (\r\n                <ChartBar \r\n                  key={item.data}\r\n                  displayTitle={false}\r\n                  displayLegend\r\n                  data={item.data}\r\n                  options={item.options}\r\n                />\r\n              ))\r\n            ) : (\r\n              spentsUtilitiesNegative.map(item => (\r\n                <ChartBar \r\n                  key={item.data}\r\n                  displayTitle={false}\r\n                  displayLegend\r\n                  data={item.data}\r\n                  options={item.options}\r\n                />\r\n              ))\r\n            )\r\n          )}\r\n      </Container>\r\n      <Container className=\"content full\">\r\n        <StyledTitleAction>\r\n          <div className=\"chart-title\">\r\n            Valor Utilities / RNE <span>Valores Realizados x Orçados</span>\r\n          </div>\r\n        </StyledTitleAction>\r\n        <RadioSliding\r\n          name=\"isToggleUtilitiesRne\"\r\n          changeRadio={ toggleRne } \r\n          icon={false}\r\n          opOne=\"+10\"\r\n          opTwo=\"-10\"\r\n        />\r\n        {loading ? (\r\n            <Shimmer>\r\n              <LoadGraph />\r\n            </Shimmer>\r\n          ) : (\r\n            isToggleUtilitiesRne ? (\r\n              spentsUtilitiesRnePositive.map(item => (\r\n                <ChartBar \r\n                  key={item.data}\r\n                  displayTitle={false}\r\n                  displayLegend\r\n                  data={item.data}\r\n                  options={item.options}\r\n                />\r\n              ))\r\n            ) : (\r\n              spentsUtilitiesRneNegative.map(item => (\r\n                <ChartBar \r\n                  key={item.data}\r\n                  displayTitle={false}\r\n                  displayLegend\r\n                  data={item.data}\r\n                  options={item.options}\r\n                />\r\n              ))\r\n          )\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}