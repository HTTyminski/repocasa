{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henriquet\\\\Desktop\\\\projetos\\\\SIM_WEB\\\\src\\\\pages\\\\PlanejamentoAnual\\\\index.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Shimmer from 'react-shimmer-effect';\nimport { toast } from 'react-toastify';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { TableWrapper } from './styles';\nimport { useModal } from '../../hook/useModal';\nimport Icon from '../../components/Icons';\nimport LoadLine from '../../components/LoadLine';\nimport Container from '../../components/Container';\nimport ButtonAdd from '../../components/ButtonAdd';\nimport ConfirmAlert from '../../components/ConfirmAlert';\nimport TableDropDownCustom from '../../components/TableDropDownCustom';\nimport UhsFormModal from './components/UhsFormModal';\nimport GasFormModal from './components/GasFormModal';\nimport WaterFormModal from './components/WaterFormModal';\nimport EnergyFormModal from './components/EnergyFormModal';\nimport api from '../../services/api';\nimport { changeDateAction } from '../../store/modules/consumo/annualplanning/actions';\nexport default function PlanejamentoAnual() {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [planning, setPlanning] = useState([]);\n  const [payload, setPayload] = useState({});\n  const {\n    RenderModal: UshModalWrapper,\n    ...ushHook\n  } = useModal();\n  const {\n    RenderModal: EnergyModalWrapper,\n    ...energyHook\n  } = useModal();\n  const {\n    RenderModal: GasModalWrapper,\n    ...gasHook\n  } = useModal();\n  const {\n    RenderModal: WaterModalWrapper,\n    ...waterHook\n  } = useModal();\n  const annualplanning = useSelector(state => state.annualplanning);\n  console.log('annualplanning', annualplanning);\n  const hotelID = useSelector(state => state.user.profile.activeHotel);\n  const loadPlanning = useCallback(async () => {\n    try {\n      setLoading(true);\n\n      if (annualplanning.date === null) {\n        return;\n      }\n\n      const setYear = annualplanning.date.getFullYear();\n      const response = await api.get('/annual-plans', {\n        params: {\n          hotel_id: hotelID,\n          year: setYear\n        }\n      });\n      setPlanning(response.data);\n    } catch (error) {\n      toast.error('Não foi possível carregar planejamento anual.');\n    }\n\n    setLoading(false);\n  }, [hotelID, annualplanning.date]); // TODO: setar diretamente no redux\n\n  useEffect(() => {\n    dispatch(changeDateAction(new Date()));\n  }, []); // eslint-disable-line\n\n  useEffect(() => {\n    document.title = 'SIM - Consumo | Planejamento Anual';\n    loadPlanning();\n  }, [loadPlanning]);\n\n  const handleOpenModal = async (modalFn, item) => {\n    const response = await api.get(`/annual-plans/${item}`, {\n      params: {\n        hotel_id: hotelID\n      }\n    });\n    const {\n      data\n    } = response;\n    setPayload(data);\n    modalFn();\n  };\n\n  async function handleDelete(myObj) {\n    console.log('myObj', myObj);\n\n    if (!Array.isArray(myObj.key)) {\n      throw new Error('Key is not an array');\n    }\n\n    const values = myObj.key;\n    const newValues = {};\n    values.forEach(value => {\n      newValues[value] = 0;\n    });\n\n    async function deleteIdividualEntries() {\n      try {\n        await api.put(`/annual-plans/${myObj.id}`, {\n          id: myObj.id,\n          ...newValues,\n          hotel_id: hotelID\n        });\n        toast.success('Planejamento anual excluído com sucesso.');\n        loadPlanning();\n      } catch (error) {\n        toast.error('Não foi possível remover o relógio selecionado.');\n      }\n    }\n\n    confirmAlert({\n      customUI: ({\n        onClose\n      }) => // eslint-disable-line\n      React.createElement(ConfirmAlert, {\n        callback: deleteIdividualEntries,\n        onClose: onClose,\n        icon: React.createElement(Icon, {\n          name: \"iconTrash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }),\n        title: \"Deletar planejamento\",\n        message: React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"Tem certeza que deseja deletar planejamento anual de\", ' ', React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, myObj.month_name), \" de\", ' ', React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, myObj.year), \"?\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    id: \"modal-root\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), React.createElement(UshModalWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(UhsFormModal, {\n    handleClose: ushHook.hide,\n    item: payload.id,\n    loadPlanning: loadPlanning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })), React.createElement(EnergyModalWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(EnergyFormModal, {\n    handleClose: energyHook.hide,\n    item: payload.id,\n    loadPlanning: loadPlanning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  })), React.createElement(GasModalWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(GasFormModal, {\n    handleClose: gasHook.hide,\n    item: payload.id,\n    loadPlanning: loadPlanning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })), React.createElement(WaterModalWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(WaterFormModal, {\n    handleClose: waterHook.hide,\n    item: payload.id,\n    loadPlanning: loadPlanning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  })), React.createElement(Container, {\n    className: \"content full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Planejamento\", ' ', annualplanning.date && annualplanning.date.getFullYear())), React.createElement(TableWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"M\\xEAs\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"UHs ocupadas\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Receita\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Energia\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"G\\xE1s\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"\\xC1gua\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"\\xA0\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Unidades\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"Reais\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"Valor\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"Valor\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, \"Valor\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"\\xA0\")), loading ? React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    width: \"15%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(Shimmer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(LoadLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }))), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(Shimmer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(LoadLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }))), React.createElement(\"td\", {\n    colSpan: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(Shimmer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(LoadLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }))), React.createElement(\"td\", {\n    colSpan: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(Shimmer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(LoadLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }))), React.createElement(\"td\", {\n    colSpan: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(Shimmer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(LoadLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }))), React.createElement(\"td\", {\n    colSpan: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(Shimmer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(LoadLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  })))) : planning.map(item => React.createElement(\"tr\", {\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, item.month_name), !item.uhs && !item.income ? React.createElement(\"td\", {\n    colSpan: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, React.createElement(ButtonAdd, {\n    onClick: () => handleOpenModal(ushHook.show, item.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"iconPlus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }), \"Adicionar\")) : React.createElement(React.Fragment, null, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, item.uhs), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, item.income_formatted), React.createElement(\"td\", {\n    width: \"75\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(TableDropDownCustom, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      handleOpenModal(ushHook.show, item.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, \"Editar\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      handleDelete({\n        key: ['uhs', 'income'],\n        ...item\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, \"Excluir\")))), !item.electricity_consumption ? React.createElement(\"td\", {\n    colSpan: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, React.createElement(ButtonAdd, {\n    onClick: () => handleOpenModal(energyHook.show, item.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"iconPlus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }), \"Adicionar\")) : React.createElement(React.Fragment, null, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, item.electricity_consumption_formatted), React.createElement(\"td\", {\n    width: \"75\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, React.createElement(TableDropDownCustom, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      handleOpenModal(energyHook.show, item.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, \"Editar\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      handleDelete({\n        key: ['electricity_consumption'],\n        ...item\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, \"Excluir\")))), !item.gas_consumption ? React.createElement(\"td\", {\n    colSpan: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }, React.createElement(ButtonAdd, {\n    onClick: () => handleOpenModal(gasHook.show, item.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"iconPlus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }), \"Adicionar\")) : React.createElement(React.Fragment, null, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }, item.gas_consumption_formatted), React.createElement(\"td\", {\n    width: \"75\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, React.createElement(TableDropDownCustom, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      handleOpenModal(gasHook.show, item.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }, \"Editar\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      handleDelete({\n        key: ['gas_consumption'],\n        ...item\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }, \"Excluir\")))), !item.water_consumption ? React.createElement(\"td\", {\n    colSpan: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  }, React.createElement(ButtonAdd, {\n    onClick: () => handleOpenModal(waterHook.show, item.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"iconPlus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371\n    },\n    __self: this\n  }), \"Adicionar\")) : React.createElement(React.Fragment, null, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377\n    },\n    __self: this\n  }, item.water_consumption_formatted), React.createElement(\"td\", {\n    width: \"75\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }, React.createElement(TableDropDownCustom, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      handleOpenModal(waterHook.show, item.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380\n    },\n    __self: this\n  }, \"Editar\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      handleDelete({\n        key: ['water_consumption'],\n        ...item\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }, \"Excluir\")))))))))));\n}","map":{"version":3,"sources":["C:/Users/henriquet/Desktop/projetos/SIM_WEB/src/pages/PlanejamentoAnual/index.js"],"names":["React","useState","useEffect","useCallback","useSelector","useDispatch","Shimmer","toast","confirmAlert","TableWrapper","useModal","Icon","LoadLine","Container","ButtonAdd","ConfirmAlert","TableDropDownCustom","UhsFormModal","GasFormModal","WaterFormModal","EnergyFormModal","api","changeDateAction","PlanejamentoAnual","dispatch","loading","setLoading","planning","setPlanning","payload","setPayload","RenderModal","UshModalWrapper","ushHook","EnergyModalWrapper","energyHook","GasModalWrapper","gasHook","WaterModalWrapper","waterHook","annualplanning","state","console","log","hotelID","user","profile","activeHotel","loadPlanning","date","setYear","getFullYear","response","get","params","hotel_id","year","data","error","Date","document","title","handleOpenModal","modalFn","item","handleDelete","myObj","Array","isArray","key","Error","values","newValues","forEach","value","deleteIdividualEntries","put","id","success","customUI","onClose","month_name","hide","map","uhs","income","show","income_formatted","electricity_consumption","electricity_consumption_formatted","gas_consumption","gas_consumption_formatted","water_consumption","water_consumption_formatted"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Shimmer from 'react-shimmer-effect';\r\nimport { toast } from 'react-toastify';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nimport { TableWrapper } from './styles';\r\n\r\nimport { useModal } from '../../hook/useModal';\r\n\r\nimport Icon from '../../components/Icons';\r\nimport LoadLine from '../../components/LoadLine';\r\nimport Container from '../../components/Container';\r\nimport ButtonAdd from '../../components/ButtonAdd';\r\nimport ConfirmAlert from '../../components/ConfirmAlert';\r\nimport TableDropDownCustom from '../../components/TableDropDownCustom';\r\n\r\nimport UhsFormModal from './components/UhsFormModal';\r\nimport GasFormModal from './components/GasFormModal';\r\nimport WaterFormModal from './components/WaterFormModal';\r\nimport EnergyFormModal from './components/EnergyFormModal';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport { changeDateAction } from '../../store/modules/consumo/annualplanning/actions';\r\n\r\nexport default function PlanejamentoAnual() {\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const [planning, setPlanning] = useState([]);\r\n  const [payload, setPayload] = useState({});\r\n  const { RenderModal: UshModalWrapper, ...ushHook } = useModal();\r\n  const { RenderModal: EnergyModalWrapper, ...energyHook } = useModal();\r\n  const { RenderModal: GasModalWrapper, ...gasHook } = useModal();\r\n  const { RenderModal: WaterModalWrapper, ...waterHook } = useModal();\r\n\r\n  const annualplanning = useSelector(state => state.annualplanning);\r\n  console.log('annualplanning', annualplanning);\r\n\r\n  const hotelID = useSelector(state => state.user.profile.activeHotel);\r\n\r\n  const loadPlanning = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      if (annualplanning.date === null) {\r\n        return;\r\n      }\r\n\r\n      const setYear = annualplanning.date.getFullYear();\r\n\r\n      const response = await api.get('/annual-plans', {\r\n        params: {\r\n          hotel_id: hotelID,\r\n          year: setYear,\r\n        },\r\n      });\r\n\r\n      setPlanning(response.data);\r\n    } catch (error) {\r\n      toast.error('Não foi possível carregar planejamento anual.');\r\n    }\r\n    setLoading(false);\r\n  }, [hotelID, annualplanning.date]);\r\n\r\n  // TODO: setar diretamente no redux\r\n  useEffect(() => {\r\n    dispatch(changeDateAction(new Date()));\r\n  }, []); // eslint-disable-line\r\n\r\n  useEffect(() => {\r\n    document.title = 'SIM - Consumo | Planejamento Anual';\r\n\r\n    loadPlanning();\r\n  }, [loadPlanning]);\r\n\r\n  const handleOpenModal = async (modalFn, item) => {\r\n    const response = await api.get(`/annual-plans/${item}`, {\r\n      params: {\r\n        hotel_id: hotelID,\r\n      },\r\n    });\r\n\r\n    const { data } = response;\r\n\r\n    setPayload(data);\r\n    modalFn();\r\n  };\r\n\r\n  async function handleDelete(myObj) {\r\n    console.log('myObj', myObj);\r\n\r\n    if (!Array.isArray(myObj.key)) {\r\n      throw new Error('Key is not an array');\r\n    }\r\n\r\n    const values = myObj.key;\r\n    const newValues = {};\r\n    values.forEach(value => {\r\n      newValues[value] = 0;\r\n    });\r\n\r\n    async function deleteIdividualEntries() {\r\n      try {\r\n        await api.put(`/annual-plans/${myObj.id}`, {\r\n          id: myObj.id,\r\n          ...newValues,\r\n          hotel_id: hotelID,\r\n        });\r\n\r\n        toast.success('Planejamento anual excluído com sucesso.');\r\n\r\n        loadPlanning();\r\n      } catch (error) {\r\n        toast.error('Não foi possível remover o relógio selecionado.');\r\n      }\r\n    }\r\n\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => ( // eslint-disable-line\r\n        <ConfirmAlert\r\n          callback={deleteIdividualEntries}\r\n          onClose={onClose}\r\n          icon={<Icon name=\"iconTrash\" />}\r\n          title=\"Deletar planejamento\"\r\n          message={\r\n            <p>\r\n              Tem certeza que deseja deletar planejamento anual de{' '}\r\n              <strong>{myObj.month_name}</strong> de{' '}\r\n              <strong>{myObj.year}</strong>?\r\n            </p>\r\n          }\r\n        />\r\n      ),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"modal-root\" />\r\n      <UshModalWrapper>\r\n        <UhsFormModal\r\n          handleClose={ushHook.hide}\r\n          item={payload.id}\r\n          loadPlanning={loadPlanning}\r\n        />\r\n      </UshModalWrapper>\r\n\r\n      <EnergyModalWrapper>\r\n        <EnergyFormModal\r\n          handleClose={energyHook.hide}\r\n          item={payload.id}\r\n          loadPlanning={loadPlanning}\r\n        />\r\n      </EnergyModalWrapper>\r\n\r\n      <GasModalWrapper>\r\n        <GasFormModal\r\n          handleClose={gasHook.hide}\r\n          item={payload.id}\r\n          loadPlanning={loadPlanning}\r\n        />\r\n      </GasModalWrapper>\r\n\r\n      <WaterModalWrapper>\r\n        <WaterFormModal\r\n          handleClose={waterHook.hide}\r\n          item={payload.id}\r\n          loadPlanning={loadPlanning}\r\n        />  \r\n      </WaterModalWrapper>\r\n\r\n      <Container className=\"content full\">\r\n        <div className=\"title\">\r\n          <p>\r\n            Planejamento{' '}\r\n            {annualplanning.date && annualplanning.date.getFullYear()}\r\n          </p>\r\n        </div>\r\n        <TableWrapper>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Mês</th>\r\n                <th>UHs ocupadas</th>\r\n                <th>Receita</th>\r\n                <th>&nbsp;</th>\r\n                <th>Energia</th>\r\n                <th>&nbsp;</th>\r\n                <th>Gás</th>\r\n                <th>&nbsp;</th>\r\n                <th>Água</th>\r\n                <th>&nbsp;</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>&nbsp;</td>\r\n                <td>Unidades</td>\r\n                <td>Reais</td>\r\n                <td>&nbsp;</td>\r\n                <td>Valor</td>\r\n                <td>&nbsp;</td>\r\n                <td>Valor</td>\r\n                <td>&nbsp;</td>\r\n                <td>Valor</td>\r\n                <td>&nbsp;</td>\r\n              </tr>\r\n              {loading ? (\r\n                <tr>\r\n                  <td width=\"15%\">\r\n                    <Shimmer>\r\n                      <LoadLine />\r\n                    </Shimmer>\r\n                  </td>\r\n                  <td>\r\n                    <Shimmer>\r\n                      <LoadLine />\r\n                    </Shimmer>\r\n                  </td>\r\n                  <td colSpan=\"2\">\r\n                    <Shimmer>\r\n                      <LoadLine />\r\n                    </Shimmer>\r\n                  </td>\r\n                  <td colSpan=\"2\">\r\n                    <Shimmer>\r\n                      <LoadLine />\r\n                    </Shimmer>\r\n                  </td>\r\n                  <td colSpan=\"2\">\r\n                    <Shimmer>\r\n                      <LoadLine />\r\n                    </Shimmer>\r\n                  </td>\r\n                  <td colSpan=\"2\">\r\n                    <Shimmer>\r\n                      <LoadLine />\r\n                    </Shimmer>\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                planning.map(item => (\r\n                  <tr key={item.id}>\r\n                    <td>{item.month_name}</td>\r\n\r\n                    {!item.uhs && !item.income ? (\r\n                      <td colSpan=\"3\">\r\n                        <ButtonAdd\r\n                          onClick={() => handleOpenModal(ushHook.show, item.id)}\r\n                        >\r\n                          <Icon name=\"iconPlus\" />\r\n                          Adicionar\r\n                        </ButtonAdd>\r\n                      </td>\r\n                    ) : (\r\n                      <>\r\n                        <td>{item.uhs}</td>\r\n                        <td>{item.income_formatted}</td>\r\n                        <td width=\"75\">\r\n                          <TableDropDownCustom>\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                handleOpenModal(ushHook.show, item.id);\r\n                              }}\r\n                            >\r\n                              Editar\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                handleDelete({\r\n                                  key: ['uhs', 'income'],\r\n                                  ...item,\r\n                                });\r\n                              }}\r\n                            >\r\n                              Excluir\r\n                            </button>\r\n                          </TableDropDownCustom>\r\n                        </td>\r\n                      </>\r\n                    )}\r\n\r\n                    {!item.electricity_consumption ? (\r\n                      <td colSpan=\"2\">\r\n                        <ButtonAdd\r\n                          onClick={() =>\r\n                            handleOpenModal(energyHook.show, item.id)\r\n                          }\r\n                        >\r\n                          <Icon name=\"iconPlus\" />\r\n                          Adicionar\r\n                        </ButtonAdd>\r\n                      </td>\r\n                    ) : (\r\n                      <>\r\n                        <td>{item.electricity_consumption_formatted}</td>\r\n                        <td width=\"75\">\r\n                          <TableDropDownCustom>\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                handleOpenModal(energyHook.show, item.id);\r\n                              }}\r\n                            >\r\n                              Editar\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                handleDelete({\r\n                                  key: ['electricity_consumption'],\r\n                                  ...item,\r\n                                });\r\n                              }}\r\n                            >\r\n                              Excluir\r\n                            </button>\r\n                          </TableDropDownCustom>\r\n                        </td>\r\n                      </>\r\n                    )}\r\n\r\n                    {!item.gas_consumption ? (\r\n                      <td colSpan=\"2\">\r\n                        <ButtonAdd\r\n                          onClick={() => handleOpenModal(gasHook.show, item.id)}\r\n                        >\r\n                          <Icon name=\"iconPlus\" />\r\n                          Adicionar\r\n                        </ButtonAdd>\r\n                      </td>\r\n                    ) : (\r\n                      <>\r\n                        <td>{item.gas_consumption_formatted}</td>\r\n                        <td width=\"75\">\r\n                          <TableDropDownCustom>\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                handleOpenModal(gasHook.show, item.id);\r\n                              }}\r\n                            >\r\n                              Editar\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                handleDelete({\r\n                                  key: ['gas_consumption'],\r\n                                  ...item,\r\n                                });\r\n                              }}\r\n                            >\r\n                              Excluir\r\n                            </button>\r\n                          </TableDropDownCustom>\r\n                        </td>\r\n                      </>\r\n                    )}\r\n\r\n                    {!item.water_consumption ? (\r\n                      <td colSpan=\"2\">\r\n                        <ButtonAdd\r\n                          onClick={() => handleOpenModal(waterHook.show, item.id)}\r\n                        >\r\n                          <Icon name=\"iconPlus\" />\r\n                          Adicionar\r\n                        </ButtonAdd>\r\n                      </td>\r\n                    ) : (\r\n                      <>\r\n                        <td>{item.water_consumption_formatted}</td>\r\n                        <td width=\"75\">\r\n                          <TableDropDownCustom>\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                handleOpenModal(waterHook.show, item.id);\r\n                              }}\r\n                            >\r\n                              Editar\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                handleDelete({\r\n                                  key: ['water_consumption'],\r\n                                  ...item,\r\n                                });\r\n                              }}\r\n                            >\r\n                              Excluir\r\n                            </button>\r\n                          </TableDropDownCustom>\r\n                        </td>\r\n                      </>\r\n                    )}\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </TableWrapper>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}