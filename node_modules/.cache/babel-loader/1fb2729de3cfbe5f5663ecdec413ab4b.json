{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henriquet\\\\Desktop\\\\projetos\\\\SIM_WEB\\\\src\\\\pages\\\\ConsumoHotel\\\\index.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport ReactTooltip from 'react-tooltip';\nimport LoadGraph from '../../components/LoadGraph';\nimport Shimmer from 'react-shimmer-effect';\nimport { StyledBoxes, StyledTitleAction } from './styles';\nimport ChartBar from '../../components/ChartBar';\nimport Container from '../../components/Container';\nimport RadioSliding from '../../components/RadioSliding';\nimport TableConsumption from '../../components/TableConsumption';\nimport api from '../../services/api';\nimport { currencyBRoptions } from '../../util/graphs/currency';\nimport { consumptionTypes } from '../../util/consumption/types';\nexport default function ConsumoHotel() {\n  const [loading, setLoading] = useState(false);\n  const [hotelConsumption, setHotelConsumption] = useState([]);\n  const [hotelConsumptionChart, setHotelConsumptionChart] = useState([]);\n  const [hotelConsumptionReadChart, sethotelConsumptionReadChart] = useState([]);\n  const [totalsConsumption, setTotalsConsumption] = useState([]);\n  const [isToggleContainer, setToggleContainer] = useState(true);\n  const [isToggleTable, setIsToggleTable] = useState(true);\n  const [isToggleGraphConsumption, setToggleGraphConsumption] = useState(true);\n  const optionsConsumptionHotel = useSelector(state => state.consumptionhotel);\n  const clockConfig = consumptionTypes.find(a => a.value === optionsConsumptionHotel.consumption[0]);\n  const hotelID = useSelector(state => state.user.profile.activeHotel);\n  const loadTotals = useCallback(async () => {\n    try {\n      if (optionsConsumptionHotel.end && optionsConsumptionHotel.start) {\n        setLoading(true);\n        const setStartYear = optionsConsumptionHotel.start.year();\n        const setStartMonth = optionsConsumptionHotel.start.month() + 1;\n        const setEndYear = optionsConsumptionHotel.end.year();\n        const setEndMonth = optionsConsumptionHotel.end.month() + 1;\n        const selectedHotelParams = new URLSearchParams();\n        selectedHotelParams.append('selected_hotels', hotelID);\n        selectedHotelParams.append('initial_range_year', setStartYear);\n        selectedHotelParams.append('initial_range_month', setStartMonth);\n        selectedHotelParams.append('final_range_month', setEndMonth);\n        selectedHotelParams.append('final_range_year', setEndYear);\n\n        if (clockConfig.type) {\n          selectedHotelParams.append('type', clockConfig.type);\n        }\n\n        if (optionsConsumptionHotel.select) {\n          optionsConsumptionHotel.select.forEach(element => {\n            return selectedHotelParams.append('selected_clocks', element.value);\n          });\n        }\n\n        const request = {\n          params: selectedHotelParams\n        };\n        const response = await api.get(`/general-consumption-totals`, request);\n        setTotalsConsumption(response.data);\n      }\n    } catch (error) {\n      toast.error('Não foi possível carregar o consumo do hotel.');\n      console.error('LoadTotals errors: ', error);\n    }\n\n    setLoading(false); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [optionsConsumptionHotel, hotelID]);\n  const loadHotelConsumption = useCallback(async () => {\n    try {\n      setLoading(true);\n      const setStartYear = optionsConsumptionHotel.start.year();\n      const setStartMonth = optionsConsumptionHotel.start.month() + 1;\n      const setEndYear = optionsConsumptionHotel.end.year();\n      const setEndMonth = optionsConsumptionHotel.end.month() + 1;\n      const selectedHotelParams = new URLSearchParams();\n      selectedHotelParams.append('hotel_id', hotelID);\n      selectedHotelParams.append('initial_range_year', setStartYear);\n      selectedHotelParams.append('initial_range_month', setStartMonth);\n      selectedHotelParams.append('final_range_month', setEndMonth);\n      selectedHotelParams.append('final_range_year', setEndYear);\n\n      if (clockConfig.type) {\n        selectedHotelParams.append('type', clockConfig.type);\n      }\n\n      if (optionsConsumptionHotel.select) {\n        optionsConsumptionHotel.select.forEach(element => {\n          return selectedHotelParams.append('selected_clocks', element.value);\n        });\n      }\n\n      const request = {\n        params: selectedHotelParams\n      };\n      const response = await api.get(`/consumption-by-hotel`, request);\n      setHotelConsumption(response.data);\n    } catch (error) {\n      toast.error('Não foi possível carregar o consumo do hotel.');\n      console.error('Error on loadHotelConsumption: ', error);\n    }\n\n    setLoading(false); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [optionsConsumptionHotel, hotelID]);\n  useEffect(() => {\n    loadHotelConsumption();\n  }, [loadHotelConsumption]);\n  const mountChartConsumption = useCallback(async () => {\n    let spentBackgroundColor = clockConfig.backgroundcolor;\n    const dataHotelSpent = [];\n    const dataHotelBudgeted = [];\n    const dataHotelRead = [];\n    const labelMonths = [];\n\n    for (let key in hotelConsumption) {\n      let monthYear = 'Não informado';\n\n      if (hotelConsumption[key] && hotelConsumption[key].month && hotelConsumption[key].year) {\n        const month = hotelConsumption[key].month_name;\n        const year = hotelConsumption[key].year;\n        monthYear = month + '/' + year;\n      }\n\n      dataHotelSpent.push(hotelConsumption[key] && hotelConsumption[key].spent);\n      dataHotelBudgeted.push(hotelConsumption[key] && hotelConsumption[key].budgeted);\n      dataHotelRead.push(hotelConsumption[key] && hotelConsumption[key].read);\n      labelMonths.push(monthYear);\n    }\n\n    const mountChart = {\n      data: {\n        labels: labelMonths,\n        datasets: [{\n          label: 'Ocupado',\n          data: dataHotelRead,\n          fill: false,\n          borderColor: 'rgba(82, 201, 102, 1)',\n          type: 'line',\n          pointBackgroundColor: '#fff',\n          pointBorderColor: 'rgba(82, 201, 102, 1)',\n          pointRadius: 5,\n          pointBorderWidth: 2,\n          index: 2\n        }, {\n          label: 'Realizado',\n          data: dataHotelSpent,\n          backgroundColor: spentBackgroundColor,\n          maxBarThickness: 45,\n          type: 'bar',\n          index: 1\n        }, {\n          label: 'Orçado',\n          data: dataHotelBudgeted,\n          backgroundColor: 'rgba(242, 243, 255, 1)',\n          maxBarThickness: 65,\n          type: 'bar',\n          index: 0\n        }]\n      },\n      options: currencyBRoptions\n    };\n    setHotelConsumptionChart([mountChart]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [optionsConsumptionHotel, hotelConsumption]);\n  const mountChartConsumptionRead = useCallback(async () => {\n    let spentBackgroundColor = clockConfig.backgroundcolor;\n    const dataHotelSpent = [];\n    const dataHotelRead = [];\n    const labelMonths = [];\n\n    for (let key in hotelConsumption) {\n      let monthYear = 'Não informado';\n\n      if (hotelConsumption[key] && hotelConsumption[key].month && hotelConsumption[key].year) {\n        const month = hotelConsumption[key].month_name;\n        const year = hotelConsumption[key].year;\n        monthYear = month + '/' + year;\n      }\n\n      dataHotelSpent.push(hotelConsumption[key] && hotelConsumption[key].spent);\n      dataHotelRead.push(hotelConsumption[key] && hotelConsumption[key].read);\n      labelMonths.push(monthYear);\n    }\n\n    const mountChart = {\n      data: {\n        labels: labelMonths,\n        datasets: [{\n          label: 'Ocupado',\n          data: dataHotelRead,\n          fill: false,\n          borderColor: 'rgba(82, 201, 102, 1)',\n          type: 'line',\n          pointBackgroundColor: '#fff',\n          pointBorderColor: 'rgba(82, 201, 102, 1)',\n          pointRadius: 5,\n          pointBorderWidth: 2,\n          index: 2\n        }, {\n          label: 'Realizado',\n          data: dataHotelSpent,\n          backgroundColor: spentBackgroundColor,\n          maxBarThickness: 45,\n          type: 'bar',\n          index: 1\n        }]\n      },\n      options: {\n        elements: {\n          line: {\n            tension: 0\n          }\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              callback: function (value) {\n                const metric = clockConfig.type === 1 ? ' Kg' : clockConfig.type === 2 ? ' KWh' : ' m³';\n                return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.') + metric;\n              }\n            }\n          }],\n          xAxes: [{\n            gridLines: {\n              display: false\n            },\n            stacked: true\n          }]\n        },\n        legend: {\n          display: true,\n          position: 'bottom',\n          labels: {\n            usePointStyle: true\n          }\n        }\n      }\n    };\n    sethotelConsumptionReadChart([mountChart]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [optionsConsumptionHotel, hotelConsumption]);\n  useEffect(() => {\n    document.title = 'SIM - Consumo | Consumo por Hotel';\n    loadTotals();\n  }, [loadTotals, setHotelConsumption]);\n  useEffect(() => {\n    mountChartConsumption();\n  }, [mountChartConsumption]);\n  useEffect(() => {\n    mountChartConsumptionRead();\n  }, [mountChartConsumptionRead]);\n\n  function toggleContainer() {\n    setToggleContainer(!isToggleContainer);\n  }\n\n  function toggleGraphConsumption() {\n    setToggleGraphConsumption(!isToggleGraphConsumption);\n  }\n\n  function toggleTable() {\n    setIsToggleTable(!isToggleTable);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(StyledBoxes, {\n    className: \"box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, totalsConsumption.map((item, key) => React.createElement(\"div\", {\n    key: item.type,\n    className: \"box__item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"box__item-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, clockConfig && clockConfig.name, key === 1 ? ' / RNE' : key === 2 ? ' / Rec' : ''), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: `arrow consumption-${item.difference > 0 ? 'up' : 'down'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }), item.difference, \"%\")), React.createElement(\"div\", {\n    className: \"box__item-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"icon icon--budget\",\n    \"data-tip\": \"Or\\xE7ado\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }, React.createElement(ReactTooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  })), item.budgeted_formatted), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: `icon icon--fulfilled icon-type-${clockConfig.type}`,\n    \"data-tip\": \"Realizado\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"letter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, \"R\")), item.spent_formatted))))), React.createElement(Container, {\n    className: \"content full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  }, React.createElement(StyledTitleAction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chart-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, \"Consumo or\\xE7ado x realizado\", ' ', React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }, clockConfig && clockConfig.name)), React.createElement(RadioSliding, {\n    name: \"isToggleContainer\",\n    changeRadio: toggleContainer,\n    changeTable: toggleTable,\n    icon: true,\n    opOne: \"iconGraph\",\n    opTwo: \"iconList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  })), clockConfig.value !== 'UTILITIES' ? React.createElement(RadioSliding, {\n    name: \"isToggleGraphConsumption\",\n    changeRadio: toggleGraphConsumption,\n    icon: false,\n    opOne: clockConfig.type === 1 ? 'Kg' : clockConfig.type === 2 ? 'KWh' : 'm³',\n    opTwo: \"R$\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346\n    },\n    __self: this\n  }) : '', loading ? React.createElement(Shimmer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, React.createElement(LoadGraph, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  })) : !isToggleTable && isToggleContainer ? isToggleGraphConsumption && clockConfig.value !== 'UTILITIES' ? hotelConsumptionReadChart.map(item => React.createElement(ChartBar, {\n    key: item.data,\n    displayTitle: false,\n    displayLegend: true,\n    data: item.data,\n    options: item.options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  })) : hotelConsumptionChart.map(item => React.createElement(ChartBar, {\n    key: item.data,\n    displayTitle: false,\n    displayLegend: true,\n    data: item.data,\n    options: item.options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  })) : hotelConsumptionChart.map(item => React.createElement(ChartBar, {\n    key: item.data,\n    displayTitle: false,\n    displayLegend: true,\n    data: item.data,\n    options: item.options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  })), isToggleTable ? React.createElement(TableConsumption, {\n    data: hotelConsumption,\n    clockType: clockConfig,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null)));\n}","map":{"version":3,"sources":["C:/Users/henriquet/Desktop/projetos/SIM_WEB/src/pages/ConsumoHotel/index.js"],"names":["React","useState","useEffect","useCallback","useSelector","toast","ReactTooltip","LoadGraph","Shimmer","StyledBoxes","StyledTitleAction","ChartBar","Container","RadioSliding","TableConsumption","api","currencyBRoptions","consumptionTypes","ConsumoHotel","loading","setLoading","hotelConsumption","setHotelConsumption","hotelConsumptionChart","setHotelConsumptionChart","hotelConsumptionReadChart","sethotelConsumptionReadChart","totalsConsumption","setTotalsConsumption","isToggleContainer","setToggleContainer","isToggleTable","setIsToggleTable","isToggleGraphConsumption","setToggleGraphConsumption","optionsConsumptionHotel","state","consumptionhotel","clockConfig","find","a","value","consumption","hotelID","user","profile","activeHotel","loadTotals","end","start","setStartYear","year","setStartMonth","month","setEndYear","setEndMonth","selectedHotelParams","URLSearchParams","append","type","select","forEach","element","request","params","response","get","data","error","console","loadHotelConsumption","mountChartConsumption","spentBackgroundColor","backgroundcolor","dataHotelSpent","dataHotelBudgeted","dataHotelRead","labelMonths","key","monthYear","month_name","push","spent","budgeted","read","mountChart","labels","datasets","label","fill","borderColor","pointBackgroundColor","pointBorderColor","pointRadius","pointBorderWidth","index","backgroundColor","maxBarThickness","options","mountChartConsumptionRead","elements","line","tension","scales","yAxes","ticks","callback","metric","toString","replace","xAxes","gridLines","display","stacked","legend","position","usePointStyle","document","title","toggleContainer","toggleGraphConsumption","toggleTable","map","item","name","difference","budgeted_formatted","spent_formatted"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport ReactTooltip from 'react-tooltip';\nimport LoadGraph from '../../components/LoadGraph';\nimport Shimmer from 'react-shimmer-effect';\n\nimport { StyledBoxes, StyledTitleAction } from './styles';\n\nimport ChartBar from '../../components/ChartBar';\nimport Container from '../../components/Container';\nimport RadioSliding from '../../components/RadioSliding';\nimport TableConsumption from '../../components/TableConsumption';\n\nimport api from '../../services/api';\nimport { currencyBRoptions } from '../../util/graphs/currency';\nimport { consumptionTypes } from '../../util/consumption/types';\n\nexport default function ConsumoHotel() {\n  const [loading, setLoading] = useState(false);\n  const [hotelConsumption, setHotelConsumption] = useState([]);\n  const [hotelConsumptionChart, setHotelConsumptionChart] = useState([]);\n  const [hotelConsumptionReadChart, sethotelConsumptionReadChart] = useState(\n    []\n  );\n  const [totalsConsumption, setTotalsConsumption] = useState([]);\n  const [isToggleContainer, setToggleContainer] = useState(true);\n  const [isToggleTable, setIsToggleTable] = useState(true);\n  const [isToggleGraphConsumption, setToggleGraphConsumption] = useState(true);\n\n  const optionsConsumptionHotel = useSelector(state => state.consumptionhotel);\n  const clockConfig = consumptionTypes.find(\n    a => a.value === optionsConsumptionHotel.consumption[0]\n  );\n\n  const hotelID = useSelector(state => state.user.profile.activeHotel);\n\n  const loadTotals = useCallback(async () => {\n    try {\n      if (optionsConsumptionHotel.end && optionsConsumptionHotel.start) {\n        setLoading(true);\n        const setStartYear = optionsConsumptionHotel.start.year();\n        const setStartMonth = optionsConsumptionHotel.start.month() + 1;\n        const setEndYear = optionsConsumptionHotel.end.year();\n        const setEndMonth = optionsConsumptionHotel.end.month() + 1;\n        const selectedHotelParams = new URLSearchParams();\n        selectedHotelParams.append('selected_hotels', hotelID);\n        selectedHotelParams.append('initial_range_year', setStartYear);\n        selectedHotelParams.append('initial_range_month', setStartMonth);\n        selectedHotelParams.append('final_range_month', setEndMonth);\n        selectedHotelParams.append('final_range_year', setEndYear);\n        if (clockConfig.type) {\n          selectedHotelParams.append('type', clockConfig.type);\n        }\n        if (optionsConsumptionHotel.select) {\n          optionsConsumptionHotel.select.forEach(element => {\n            return selectedHotelParams.append('selected_clocks', element.value);\n          });\n        }\n        const request = { params: selectedHotelParams };\n        const response = await api.get(`/general-consumption-totals`, request);\n        setTotalsConsumption(response.data);\n      }\n    } catch (error) {\n      toast.error('Não foi possível carregar o consumo do hotel.');\n      console.error('LoadTotals errors: ', error);\n    }\n    setLoading(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [optionsConsumptionHotel, hotelID]);\n\n  const loadHotelConsumption = useCallback(async () => {\n    try {\n      setLoading(true);\n      const setStartYear = optionsConsumptionHotel.start.year();\n      const setStartMonth = optionsConsumptionHotel.start.month() + 1;\n      const setEndYear = optionsConsumptionHotel.end.year();\n      const setEndMonth = optionsConsumptionHotel.end.month() + 1;\n      const selectedHotelParams = new URLSearchParams();\n      selectedHotelParams.append('hotel_id', hotelID);\n      selectedHotelParams.append('initial_range_year', setStartYear);\n      selectedHotelParams.append('initial_range_month', setStartMonth);\n      selectedHotelParams.append('final_range_month', setEndMonth);\n      selectedHotelParams.append('final_range_year', setEndYear);\n      if (clockConfig.type) {\n        selectedHotelParams.append('type', clockConfig.type);\n      }\n      if (optionsConsumptionHotel.select) {\n        optionsConsumptionHotel.select.forEach(element => {\n          return selectedHotelParams.append('selected_clocks', element.value);\n        });\n      }\n      const request = { params: selectedHotelParams };\n      const response = await api.get(`/consumption-by-hotel`, request);\n      setHotelConsumption(response.data);\n    } catch (error) {\n      toast.error('Não foi possível carregar o consumo do hotel.');\n      console.error('Error on loadHotelConsumption: ', error);\n    }\n    setLoading(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [optionsConsumptionHotel, hotelID]);\n\n  useEffect(() => {\n    loadHotelConsumption();\n  }, [loadHotelConsumption]);\n\n  const mountChartConsumption = useCallback(async () => {\n    let spentBackgroundColor = clockConfig.backgroundcolor;\n    const dataHotelSpent = [];\n    const dataHotelBudgeted = [];\n    const dataHotelRead = [];\n    const labelMonths = [];\n    for (let key in hotelConsumption) {\n      let monthYear = 'Não informado';\n      if (\n        hotelConsumption[key] &&\n        hotelConsumption[key].month &&\n        hotelConsumption[key].year\n      ) {\n        const month = hotelConsumption[key].month_name;\n        const year = hotelConsumption[key].year;\n        monthYear = month + '/' + year;\n      }\n      dataHotelSpent.push(hotelConsumption[key] && hotelConsumption[key].spent);\n      dataHotelBudgeted.push(\n        hotelConsumption[key] && hotelConsumption[key].budgeted\n      );\n      dataHotelRead.push(hotelConsumption[key] && hotelConsumption[key].read);\n      labelMonths.push(monthYear);\n    }\n    const mountChart = {\n      data: {\n        labels: labelMonths,\n        datasets: [\n          {\n            label: 'Ocupado',\n            data: dataHotelRead,\n            fill: false,\n            borderColor: 'rgba(82, 201, 102, 1)',\n            type: 'line',\n            pointBackgroundColor: '#fff',\n            pointBorderColor: 'rgba(82, 201, 102, 1)',\n            pointRadius: 5,\n            pointBorderWidth: 2,\n            index: 2,\n          },\n          {\n            label: 'Realizado',\n            data: dataHotelSpent,\n            backgroundColor: spentBackgroundColor,\n            maxBarThickness: 45,\n            type: 'bar',\n            index: 1,\n          },\n          {\n            label: 'Orçado',\n            data: dataHotelBudgeted,\n            backgroundColor: 'rgba(242, 243, 255, 1)',\n            maxBarThickness: 65,\n            type: 'bar',\n            index: 0,\n          },\n        ],\n      },\n      options: currencyBRoptions,\n    };\n    setHotelConsumptionChart([mountChart]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [optionsConsumptionHotel, hotelConsumption]);\n\n  const mountChartConsumptionRead = useCallback(async () => {\n    let spentBackgroundColor = clockConfig.backgroundcolor;\n    const dataHotelSpent = [];\n    const dataHotelRead = [];\n    const labelMonths = [];\n    for (let key in hotelConsumption) {\n      let monthYear = 'Não informado';\n      if (\n        hotelConsumption[key] &&\n        hotelConsumption[key].month &&\n        hotelConsumption[key].year\n      ) {\n        const month = hotelConsumption[key].month_name;\n        const year = hotelConsumption[key].year;\n        monthYear = month + '/' + year;\n      }\n      dataHotelSpent.push(hotelConsumption[key] && hotelConsumption[key].spent);\n      dataHotelRead.push(hotelConsumption[key] && hotelConsumption[key].read);\n      labelMonths.push(monthYear);\n    }\n    const mountChart = {\n      data: {\n        labels: labelMonths,\n        datasets: [\n          {\n            label: 'Ocupado',\n            data: dataHotelRead,\n            fill: false,\n            borderColor: 'rgba(82, 201, 102, 1)',\n            type: 'line',\n            pointBackgroundColor: '#fff',\n            pointBorderColor: 'rgba(82, 201, 102, 1)',\n            pointRadius: 5,\n            pointBorderWidth: 2,\n            index: 2,\n          },\n          {\n            label: 'Realizado',\n            data: dataHotelSpent,\n            backgroundColor: spentBackgroundColor,\n            maxBarThickness: 45,\n            type: 'bar',\n            index: 1,\n          },\n        ],\n      },\n      options: {\n        elements: {\n          line: {\n            tension: 0,\n          },\n        },\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                callback: function(value) {\n                  const metric =\n                    clockConfig.type === 1\n                      ? ' Kg'\n                      : clockConfig.type === 2\n                      ? ' KWh'\n                      : ' m³';\n                  return (\n                    value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.') +\n                    metric\n                  );\n                },\n              },\n            },\n          ],\n          xAxes: [\n            {\n              gridLines: {\n                display: false,\n              },\n              stacked: true,\n            },\n          ],\n        },\n        legend: {\n          display: true,\n          position: 'bottom',\n          labels: {\n            usePointStyle: true,\n          },\n        },\n      },\n    };\n    sethotelConsumptionReadChart([mountChart]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [optionsConsumptionHotel, hotelConsumption]);\n\n  useEffect(() => {\n    document.title = 'SIM - Consumo | Consumo por Hotel';\n    loadTotals();\n  }, [loadTotals, setHotelConsumption]);\n\n  useEffect(() => {\n    mountChartConsumption();\n  }, [mountChartConsumption]);\n\n  useEffect(() => {\n    mountChartConsumptionRead();\n  }, [mountChartConsumptionRead]);\n\n  function toggleContainer() {\n    setToggleContainer(!isToggleContainer);\n  }\n\n  function toggleGraphConsumption() {\n    setToggleGraphConsumption(!isToggleGraphConsumption);\n  }\n\n  function toggleTable() {\n    setIsToggleTable(!isToggleTable);\n  }\n\n  return (\n    <>\n      <StyledBoxes className=\"box\">\n        {totalsConsumption.map((item, key) => (\n          <div key={item.type} className=\"box__item\">\n            <div className=\"box__item-left\">\n              <h3>\n                {clockConfig && clockConfig.name}\n                {key === 1 ? ' / RNE' : key === 2 ? ' / Rec' : ''}\n              </h3>\n              <span>\n                <span\n                  className={`arrow consumption-${\n                    item.difference > 0 ? 'up' : 'down'\n                  }`}\n                />\n                {item.difference}%\n              </span>\n            </div>\n            <div className=\"box__item-right\">\n              <div>\n                <span className=\"icon icon--budget\" data-tip=\"Orçado\">\n                  <ReactTooltip />\n                  <span className=\"circle\" />\n                </span>\n                {item.budgeted_formatted}\n              </div>\n              <div>\n                <span\n                  className={`icon icon--fulfilled icon-type-${clockConfig.type}`}\n                  data-tip=\"Realizado\"\n                >\n                  <span className=\"letter\">R</span>\n                </span>\n                {item.spent_formatted}\n              </div>\n            </div>\n          </div>\n        ))}\n      </StyledBoxes>\n      <Container className=\"content full\">\n        <StyledTitleAction>\n          <div className=\"chart-title\">\n            Consumo orçado x realizado{' '}\n            <span>{clockConfig && clockConfig.name}</span>\n          </div>\n          <RadioSliding\n            name=\"isToggleContainer\"\n            changeRadio={toggleContainer}\n            changeTable={toggleTable}\n            icon={true}\n            opOne=\"iconGraph\"\n            opTwo=\"iconList\"\n          />\n        </StyledTitleAction>\n        {clockConfig.value !== 'UTILITIES' ? (\n          <RadioSliding\n            name=\"isToggleGraphConsumption\"\n            changeRadio={toggleGraphConsumption}\n            icon={false}\n            opOne={\n              clockConfig.type === 1\n                ? 'Kg'\n                : clockConfig.type === 2\n                ? 'KWh'\n                : 'm³'\n            }\n            opTwo=\"R$\"\n          />\n        ) : (\n          ''\n        )}\n        {loading ? (\n          <Shimmer>\n            <LoadGraph />\n          </Shimmer>\n        ) : !isToggleTable && isToggleContainer ? (\n          isToggleGraphConsumption && clockConfig.value !== 'UTILITIES' ? (\n            hotelConsumptionReadChart.map(item => (\n              <ChartBar\n                key={item.data}\n                displayTitle={false}\n                displayLegend\n                data={item.data}\n                options={item.options}\n              />\n            ))\n          ) : (\n            hotelConsumptionChart.map(item => (\n              <ChartBar\n                key={item.data}\n                displayTitle={false}\n                displayLegend\n                data={item.data}\n                options={item.options}\n              />\n            ))\n          )\n        ) : (\n          hotelConsumptionChart.map(item => (\n            <ChartBar\n              key={item.data}\n              displayTitle={false}\n              displayLegend\n              data={item.data}\n              options={item.options}\n            />\n          ))\n        )}\n        {isToggleTable ? (\n          <TableConsumption data={hotelConsumption} clockType={clockConfig} />\n        ) : (\n          <></>\n        )}\n\n        {/* // ) : isToggleContainer ? (\n            //   isToggleGraphConsumption && clockConfig.value !== 'UTILITIES' ? (\n            //     hotelConsumptionReadChart.map(item => (\n            //       <ChartBar\n            //         key={item.data}\n            //         displayTitle={false}\n            //         displayLegend\n            //         data={item.data}\n            //         options={item.options}\n            //       />\n            //     ))\n            //   ) : (\n            //     hotelConsumptionChart.map(item => (\n            //       <ChartBar\n            //         key={item.data}\n            //         displayTitle={false}\n            //         displayLegend\n            //         data={item.data}\n            //         options={item.options}\n            //       />\n            //     ))\n            //   )\n            // ) : (\n            //   <TableConsumption data={hotelConsumption} clockType={clockConfig} /> */}\n      </Container>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}