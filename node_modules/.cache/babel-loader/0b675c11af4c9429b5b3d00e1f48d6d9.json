{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henriquet\\\\Desktop\\\\projetos\\\\SIM_WEB\\\\src\\\\components\\\\TimePickerInput\\\\index.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport TimePicker from 'react-time-picker';\nimport { useField } from '@rocketseat/unform';\nimport PropTypes from 'prop-types';\nimport { TimePickerInputWrapper } from './styles';\nexport default function TimePickerInput({\n  name,\n  label,\n  disabled,\n  onChange,\n  value,\n  ...rest\n}) {\n  const ref = useRef();\n  const {\n    fieldName,\n    registerField,\n    defaultValue,\n    error\n  } = useField(name);\n  const [selected, setSelected] = useState(defaultValue);\n  useEffect(() => {\n    if (!value || value !== 'Hora inválida') {\n      setSelected(value);\n    }\n  }, [value]);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: ref.current,\n      path: 'props.selected',\n      clearValue: pickerRef => {\n        pickerRef.clear();\n      }\n    });\n  }, [ref.current, fieldName]); // eslint-disable-line\n\n  return React.createElement(TimePickerInputWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: fieldName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, label, React.createElement(TimePicker, Object.assign({\n    value: value,\n    disableClock: true,\n    clearIcon: false,\n    hourPlaceholder: \"00\",\n    minutePlaceholder: \"00\",\n    id: fieldName,\n    autoComplete: \"off\",\n    disabled: disabled,\n    name: fieldName,\n    selected: selected,\n    onChange: time => {\n      setSelected(time);\n      onChange(time);\n    },\n    ref: ref\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, error)));\n}\nTimePickerInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  value: PropTypes.any // eslint-disable-line\n\n};\nTimePickerInput.defaultProps = {\n  label: '',\n  disabled: false,\n  onChange: () => {},\n  value: null\n};","map":{"version":3,"sources":["C:/Users/henriquet/Desktop/projetos/SIM_WEB/src/components/TimePickerInput/index.js"],"names":["React","useRef","useEffect","useState","TimePicker","useField","PropTypes","TimePickerInputWrapper","TimePickerInput","name","label","disabled","onChange","value","rest","ref","fieldName","registerField","defaultValue","error","selected","setSelected","current","path","clearValue","pickerRef","clear","time","propTypes","string","isRequired","bool","func","any","defaultProps"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nimport TimePicker from 'react-time-picker';\r\n\r\nimport { useField } from '@rocketseat/unform';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { TimePickerInputWrapper } from './styles';\r\n\r\nexport default function TimePickerInput({\r\n  name,\r\n  label,\r\n  disabled,\r\n  onChange,\r\n  value,\r\n  ...rest\r\n}) {\r\n  const ref = useRef();\r\n  const { fieldName, registerField, defaultValue, error } = useField(name);\r\n  const [selected, setSelected] = useState(defaultValue);\r\n\r\n  useEffect(() => {\r\n    if (!value || value !== 'Hora inválida') {\r\n      setSelected(value);\r\n    }\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: ref.current,\r\n      path: 'props.selected',\r\n      clearValue: pickerRef => {\r\n        pickerRef.clear();\r\n      },\r\n    });\r\n  }, [ref.current, fieldName]); // eslint-disable-line\r\n\r\n  return (\r\n    <TimePickerInputWrapper>\r\n      <label htmlFor={fieldName}>\r\n        {label}\r\n        <TimePicker\r\n          value={value}\r\n          disableClock\r\n          clearIcon={false}\r\n          hourPlaceholder=\"00\"\r\n          minutePlaceholder=\"00\"\r\n          id={fieldName}\r\n          autoComplete=\"off\"\r\n          disabled={disabled}\r\n          name={fieldName}\r\n          selected={selected}\r\n          onChange={time => {\r\n            setSelected(time);\r\n            onChange(time);\r\n          }}\r\n          ref={ref}\r\n          {...rest} // eslint-disable-line\r\n        />\r\n        {error && <span>{error}</span>}\r\n      </label>\r\n    </TimePickerInputWrapper>\r\n  );\r\n}\r\n\r\nTimePickerInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.any, // eslint-disable-line\r\n};\r\n\r\nTimePickerInput.defaultProps = {\r\n  label: '',\r\n  disabled: false,\r\n  onChange: () => {},\r\n  value: null,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}