{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henriquet\\\\Desktop\\\\projetos\\\\SIM_WEB\\\\src\\\\pages\\\\Contas\\\\components\\\\InvoiceFormModal.js\";\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { Form, Input } from '@rocketseat/unform';\nimport Icon from '../../../components/Icons';\nimport CurrencyInput from '../../../components/CurrencyInput';\nimport api from '../../../services/api';\nimport { consumptionTypes } from '../../../util/consumption/types';\nimport { MonthEnum } from '../../../enums/month-enum';\nimport { Dropzone } from '../../../components/Dropzone';\n\nfunction emptyStringToNull(value, originalValue) {\n  if (typeof originalValue === 'string' && originalValue === '') {\n    return null;\n  }\n\n  return value;\n}\n\nconst schema = Yup.object().shape({\n  read: Yup.number().positive().transform(emptyStringToNull).nullable().required('Consumo é obrigatório.'),\n  value: Yup.number().positive().transform(emptyStringToNull).nullable().required('Valor é obrigatório.'),\n  attachment: Yup.mixed().nullable().transform(emptyStringToNull).required('Arquivo é obrigatório.')\n});\nexport default function InvoiceFormModal({\n  handleClose,\n  item,\n  loadInvoices\n}) {\n  const hotelID = useSelector(state => state.user.profile.activeHotel);\n  const hotelName = useSelector(state => state.user.profile.activeHotelName);\n  const [formUploadData, setFormUploadData] = useState(null);\n  const setMonth = MonthEnum[item.month_name];\n  const setYear = item.year;\n  const setTypeConsumption = consumptionTypes.find(type => type.value === item.clock_type);\n\n  async function handleSubmit(data) {\n    try {\n      const {\n        read,\n        value\n      } = data;\n      const formData = new FormData();\n      formData.append('read', read);\n      formData.append('value', value);\n      formData.append('hotel_id', JSON.parse(hotelID));\n      formData.append('invoice_id', item.id);\n      formData.append('file', formUploadData);\n      await api.put(`/invoices`, formData);\n      toast.success('Conta cadastrada com sucesso.');\n      handleClose();\n      loadInvoices();\n    } catch (error) {\n      toast.error('Não foi possível cadastrar conta.');\n    }\n  }\n\n  const handleDropDocument = files => {\n    const formData = new FormData();\n    formData.append('file', files[0]);\n    setFormUploadData(formData);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"modal__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Incluir conta de consumo\"), React.createElement(\"button\", {\n    className: \"close\",\n    type: \"button\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"iconDelete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"modal__body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal__group-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"modal__group-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Empreendimento\"), React.createElement(\"span\", {\n    className: \"modal__group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, hotelName)), React.createElement(\"div\", {\n    className: \"modal__group-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"modal__group-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"M\\xEAs\"), React.createElement(\"span\", {\n    className: \"modal__group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, setMonth, \"/\", setYear)), React.createElement(\"div\", {\n    className: \"modal__group-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"modal__group-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Rel\\xF3gio\"), React.createElement(\"span\", {\n    className: \"modal__group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, `Relógio ${setTypeConsumption.name}`)), React.createElement(Form, {\n    schema: schema,\n    onSubmit: handleSubmit,\n    encType: \"multipart/form-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form__group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"read\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Consumo\", React.createElement(Input, {\n    className: \"form__input\",\n    name: \"read\",\n    type: \"number\",\n    id: \"read\",\n    placeholder: \"Informe o consumo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form__group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Valor\", React.createElement(CurrencyInput, {\n    value: \"a\",\n    className: \"form__input\",\n    name: \"value\",\n    id: \"value\",\n    onChange: () => {},\n    placeholder: \"R$ 0,00\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form__group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"attachment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Anexo\", React.createElement(Dropzone, {\n    onDrop: handleDropDocument,\n    setFormUploadData: setFormUploadData,\n    formUploadData: formUploadData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    className: \"btn btn-add\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Incluir conta de consumo\"))));\n}\nInvoiceFormModal.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  // item: PropTypes.number,\n  loadInvoices: PropTypes.func.isRequired\n};\nInvoiceFormModal.defaultProps = {// item: null,\n};","map":{"version":3,"sources":["C:/Users/henriquet/Desktop/projetos/SIM_WEB/src/pages/Contas/components/InvoiceFormModal.js"],"names":["React","useState","useSelector","Yup","toast","PropTypes","Form","Input","Icon","CurrencyInput","api","consumptionTypes","MonthEnum","Dropzone","emptyStringToNull","value","originalValue","schema","object","shape","read","number","positive","transform","nullable","required","attachment","mixed","InvoiceFormModal","handleClose","item","loadInvoices","hotelID","state","user","profile","activeHotel","hotelName","activeHotelName","formUploadData","setFormUploadData","setMonth","month_name","setYear","year","setTypeConsumption","find","type","clock_type","handleSubmit","data","formData","FormData","append","JSON","parse","id","put","success","error","handleDropDocument","files","name","propTypes","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { Form, Input } from '@rocketseat/unform';\n\nimport Icon from '../../../components/Icons';\nimport CurrencyInput from '../../../components/CurrencyInput';\n\nimport api from '../../../services/api';\nimport { consumptionTypes } from '../../../util/consumption/types';\nimport { MonthEnum } from '../../../enums/month-enum';\n\nimport { Dropzone } from '../../../components/Dropzone';\n\nfunction emptyStringToNull(value, originalValue) {\n  if (typeof originalValue === 'string' && originalValue === '') {\n    return null;\n  }\n  return value;\n}\n\nconst schema = Yup.object().shape({\n  read: Yup.number()\n    .positive()\n    .transform(emptyStringToNull)\n    .nullable()\n    .required('Consumo é obrigatório.'),\n  value: Yup.number()\n    .positive()\n    .transform(emptyStringToNull)\n    .nullable()\n    .required('Valor é obrigatório.'),\n  attachment: Yup.mixed()\n    .nullable()\n    .transform(emptyStringToNull)\n    .required('Arquivo é obrigatório.'),\n});\n\nexport default function InvoiceFormModal({ handleClose, item, loadInvoices }) {\n  const hotelID = useSelector(state => state.user.profile.activeHotel);\n  const hotelName = useSelector(state => state.user.profile.activeHotelName);\n\n  const [formUploadData, setFormUploadData] = useState(null);\n\n  const setMonth = MonthEnum[item.month_name];\n  const setYear = item.year;\n  const setTypeConsumption = consumptionTypes.find(\n    type => type.value === item.clock_type\n  );\n\n  async function handleSubmit(data) {\n    try {\n      const { read, value } = data;\n\n      const formData = new FormData();\n\n      formData.append('read', read);\n      formData.append('value', value);\n      formData.append('hotel_id', JSON.parse(hotelID));\n      formData.append('invoice_id', item.id);\n      formData.append('file', formUploadData);\n\n      await api.put(`/invoices`, formData);\n\n      toast.success('Conta cadastrada com sucesso.');\n      handleClose();\n      loadInvoices();\n    } catch (error) {\n      toast.error('Não foi possível cadastrar conta.');\n    }\n  }\n\n  const handleDropDocument = files => {\n    const formData = new FormData();\n\n    formData.append('file', files[0]);\n    setFormUploadData(formData);\n  };\n\n  return (\n    <>\n      <div className=\"modal__header\">\n        <h3>Incluir conta de consumo</h3>\n        <button className=\"close\" type=\"button\" onClick={handleClose}>\n          <Icon name=\"iconDelete\" />\n        </button>\n      </div>\n      <div className=\"modal__body\">\n        <div className=\"modal__group-info\">\n          <p className=\"modal__group-title\">Empreendimento</p>\n          <span className=\"modal__group-text\">{hotelName}</span>\n        </div>\n        <div className=\"modal__group-info\">\n          <p className=\"modal__group-title\">Mês</p>\n          <span className=\"modal__group-text\">\n            {setMonth}/{setYear}\n          </span>\n        </div>\n        <div className=\"modal__group-info\">\n          <p className=\"modal__group-title\">Relógio</p>\n          <span className=\"modal__group-text\">{`Relógio ${setTypeConsumption.name}`}</span>\n        </div>\n        <Form\n          schema={schema}\n          onSubmit={handleSubmit}\n          encType=\"multipart/form-data\"\n        >\n          <div className=\"form__group\">\n            <label htmlFor=\"read\">\n              Consumo\n              <Input\n                className=\"form__input\"\n                name=\"read\"\n                type=\"number\"\n                id=\"read\"\n                placeholder=\"Informe o consumo\"\n              />\n            </label>\n          </div>\n          <div className=\"form__group\">\n            <label htmlFor=\"value\">\n              Valor\n              <CurrencyInput\n              value=\"a\"\n                className=\"form__input\"\n                name=\"value\"\n                id=\"value\"\n                onChange={() => {}}\n                placeholder=\"R$ 0,00\"\n              />\n            </label>\n          </div>\n          <div className=\"form__group\">\n            <label htmlFor=\"attachment\">\n              Anexo\n              <Dropzone\n                onDrop={handleDropDocument}\n                setFormUploadData={setFormUploadData}\n                formUploadData={formUploadData}\n              />\n            </label>\n          </div>\n          <button className=\"btn btn-add\" type=\"submit\">\n            Incluir conta de consumo\n          </button>\n        </Form>\n      </div>\n    </>\n  );\n}\n\nInvoiceFormModal.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  // item: PropTypes.number,\n  loadInvoices: PropTypes.func.isRequired,\n};\n\nInvoiceFormModal.defaultProps = {\n  // item: null,\n};\n"]},"metadata":{},"sourceType":"module"}