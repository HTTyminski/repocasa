{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henriquet\\\\Desktop\\\\projetos\\\\SIM_WEB\\\\src\\\\pages\\\\PlanejamentoAnual\\\\components\\\\UhsFormModal.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { Form, Input } from '@rocketseat/unform';\nimport Icon from '../../../components/Icons';\nimport CurrencyInput from '../../../components/CurrencyInput';\nimport api from '../../../services/api';\n\nfunction emptyStringToNull(value, originalValue) {\n  if (typeof originalValue === 'string' && originalValue === '') {\n    return null;\n  }\n\n  return value;\n}\n\nconst schema = Yup.object().shape({\n  uhs: Yup.number().transform(emptyStringToNull).nullable().required('UHs é obrigatória.'),\n  income: Yup.number() // .positive('Receita deve ser maior que 0.')\n  .required('Receita é obrigatória.')\n});\nexport default function UhsFormModal({\n  handleClose,\n  item,\n  loadPlanning\n}) {\n  const [initialData, setInitialData] = useState();\n  const [isEdit, setEdit] = useState(false);\n  const [planning, setPlanning] = useState([]);\n  console.log('Form data uhs', item); // eslint-disable-line\n\n  const hotelID = useSelector(state => state.user.profile.activeHotel);\n  const hotelName = useSelector(state => state.user.profile.activeHotelName);\n\n  async function handleSubmit(data) {\n    const {\n      uhs,\n      income\n    } = data;\n    await api.put(`/annual-plans/${item}`, {\n      hotel_id: hotelID,\n      uhs,\n      income\n    });\n    toast.success('Uhs cadastrado com sucesso.');\n    handleClose();\n    loadPlanning();\n  }\n\n  useEffect(() => {\n    async function loadData() {\n      const response = await api.get(`/annual-plans/${item}`, {\n        params: {\n          hotel_id: hotelID\n        }\n      });\n      const {\n        data\n      } = response;\n\n      if (data.uhs && data.income !== null) {\n        setEdit(true);\n      }\n\n      setInitialData({ ...data\n      });\n      setPlanning(data);\n    }\n\n    loadData();\n  }, [hotelID, item]);\n  const buttonRef = useRef();\n  useEffect(() => {\n    const {\n      current\n    } = buttonRef;\n\n    const handleFocus = () => current.style.opacity = '0.8';\n\n    const handleBlur = () => current.style.opacity = '1';\n\n    current.addEventListener('focusin', handleFocus);\n    current.addEventListener('blur', handleBlur);\n    return () => {\n      current.removeEventListener('focusin', handleFocus);\n      current.removeEventListener('blur', handleBlur);\n    };\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"modal__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, isEdit ? React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Editar planejamento\") : React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Incluir planejamento\"), React.createElement(\"button\", {\n    className: \"close\",\n    type: \"button\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"iconDelete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"modal__body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal__group-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"modal__group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Planeje o valor de receita mensal por Unidade\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), \"Habitacional para cada ano.\")), React.createElement(\"div\", {\n    className: \"modal__group-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"modal__group-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Empreendimento\"), React.createElement(\"span\", {\n    className: \"modal__group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, hotelName)), React.createElement(Form, {\n    schema: schema,\n    onSubmit: handleSubmit,\n    initialData: initialData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal__group-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"modal__group-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"M\\xEAs\"), React.createElement(\"span\", {\n    className: \"modal__group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, planning.month_name, \" / \", planning.year)), React.createElement(\"div\", {\n    className: \"form__group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"uhs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"UHs ocupadas\", React.createElement(Input, {\n    className: \"form__input\",\n    name: \"uhs\",\n    type: \"text\",\n    id: \"uhs\",\n    placeholder: \"Informe UHs ocupadas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form__group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(CurrencyInput, {\n    className: \"form__input\",\n    name: \"income\",\n    onChange: () => {},\n    label: \"Receita\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    useclassName: \"btn btn-add\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, isEdit ? 'Concluir edição' : 'Incluir planejamento'))));\n}\nUhsFormModal.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  item: PropTypes.number,\n  loadPlanning: PropTypes.func.isRequired\n};\nUhsFormModal.defaultProps = {\n  item: null\n};","map":{"version":3,"sources":["C:/Users/henriquet/Desktop/projetos/SIM_WEB/src/pages/PlanejamentoAnual/components/UhsFormModal.js"],"names":["React","useState","useEffect","useRef","useSelector","Yup","toast","PropTypes","Form","Input","Icon","CurrencyInput","api","emptyStringToNull","value","originalValue","schema","object","shape","uhs","number","transform","nullable","required","income","UhsFormModal","handleClose","item","loadPlanning","initialData","setInitialData","isEdit","setEdit","planning","setPlanning","console","log","hotelID","state","user","profile","activeHotel","hotelName","activeHotelName","handleSubmit","data","put","hotel_id","success","loadData","response","get","params","buttonRef","current","handleFocus","style","opacity","handleBlur","addEventListener","removeEventListener","month_name","year","propTypes","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { Form, Input } from '@rocketseat/unform';\n\nimport Icon from '../../../components/Icons';\nimport CurrencyInput from '../../../components/CurrencyInput';\n\nimport api from '../../../services/api';\n\nfunction emptyStringToNull(value, originalValue) {\n  if (typeof originalValue === 'string' && originalValue === '') {\n    return null;\n  }\n  return value;\n}\n\nconst schema = Yup.object().shape({\n  uhs: Yup.number()\n    .transform(emptyStringToNull)\n    .nullable()\n    .required('UHs é obrigatória.'),\n  income: Yup.number()\n    // .positive('Receita deve ser maior que 0.')\n    .required('Receita é obrigatória.'),\n});\n\nexport default function UhsFormModal({ handleClose, item, loadPlanning }) {\n  const [initialData, setInitialData] = useState();\n  const [isEdit, setEdit] = useState(false);\n  const [planning, setPlanning] = useState([]);\n\n  console.log('Form data uhs', item); // eslint-disable-line\n\n  const hotelID = useSelector(state => state.user.profile.activeHotel);\n  const hotelName = useSelector(state => state.user.profile.activeHotelName);\n\n  async function handleSubmit(data) {\n    const { uhs, income } = data;\n\n    await api.put(`/annual-plans/${item}`, { hotel_id: hotelID, uhs, income });\n\n    toast.success('Uhs cadastrado com sucesso.');\n\n    handleClose();\n    loadPlanning();\n  }\n\n  useEffect(() => {\n    async function loadData() {\n      const response = await api.get(`/annual-plans/${item}`, {\n        params: {\n          hotel_id: hotelID,\n        },\n      });\n\n      const { data } = response;\n\n      if (data.uhs && data.income !== null) {\n        setEdit(true);\n      }\n\n      setInitialData({\n        ...data,\n      });\n\n      setPlanning(data);\n    }\n    loadData();\n  }, [hotelID, item]);\n\n  const buttonRef = useRef();\n\n  useEffect(() => {\n    const { current } = buttonRef;\n\n    const handleFocus = () => (current.style.opacity = '0.8');\n    const handleBlur = () => (current.style.opacity = '1');\n\n    current.addEventListener('focusin', handleFocus);\n    current.addEventListener('blur', handleBlur);\n\n    return () => {\n      current.removeEventListener('focusin', handleFocus);\n      current.removeEventListener('blur', handleBlur);\n    };\n  }, []);\n\n  return (\n    <>\n      <div className=\"modal__header\">\n        {isEdit ? <h3>Editar planejamento</h3> : <h3>Incluir planejamento</h3>}\n        <button className=\"close\" type=\"button\" onClick={handleClose}>\n          <Icon name=\"iconDelete\" />\n        </button>\n      </div>\n      <div className=\"modal__body\">\n        <div className=\"modal__group-info\">\n          <span className=\"modal__group-text\">\n            Planeje o valor de receita mensal por Unidade\n            <br />\n            Habitacional para cada ano.\n          </span>\n        </div>\n        <div className=\"modal__group-info\">\n          <p className=\"modal__group-title\">Empreendimento</p>\n          <span className=\"modal__group-text\">{hotelName}</span>\n        </div>\n\n        <Form schema={schema} onSubmit={handleSubmit} initialData={initialData}>\n          <div className=\"modal__group-info\">\n            <p className=\"modal__group-title\">Mês</p>\n            <span className=\"modal__group-text\">\n              {planning.month_name} / {planning.year}\n            </span>\n          </div>\n          <div className=\"form__group\">\n            <label htmlFor=\"uhs\">\n              UHs ocupadas\n              <Input\n                className=\"form__input\"\n                name=\"uhs\"\n                type=\"text\"\n                id=\"uhs\"\n                placeholder=\"Informe UHs ocupadas\"\n              />\n            </label>\n          </div>\n          <div className=\"form__group\">\n            <CurrencyInput\n              className=\"form__input\"\n              name=\"income\"\n              onChange={() => {}}\n              label=\"Receita\"\n            />\n          </div>\n          <button useclassName=\"btn btn-add\" type=\"submit\">\n            {isEdit ? 'Concluir edição' : 'Incluir planejamento'}\n          </button>\n        </Form>\n      </div>\n    </>\n  );\n}\n\nUhsFormModal.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  item: PropTypes.number,\n  loadPlanning: PropTypes.func.isRequired,\n};\n\nUhsFormModal.defaultProps = {\n  item: null,\n};\n"]},"metadata":{},"sourceType":"module"}