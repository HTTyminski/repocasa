{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henriquet\\\\Desktop\\\\projetos\\\\SIM_WEB\\\\src\\\\pages\\\\Contas\\\\components\\\\InvoiceFormModal.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { Form, Input } from '@rocketseat/unform';\nimport Icon from '../../../components/Icons';\nimport CurrencyInput from '../../../components/CurrencyInput';\nimport api from '../../../services/api';\n\nfunction emptyStringToNull(value, originalValue) {\n  if (typeof originalValue === 'string' && originalValue === '') {\n    return null;\n  }\n\n  return value;\n}\n\nconst schema = Yup.object().shape({\n  read: Yup.number().positive().transform(emptyStringToNull).nullable().required('Consumo é obrigatório.'),\n  value: Yup.number().positive().transform(emptyStringToNull).nullable().required('Valor é obrigatório.'),\n  attachment: Yup.mixed().nullable().transform(emptyStringToNull).required('Arquivo é obrigatório.')\n});\nexport default function InvoiceFormModal({\n  handleClose,\n  item,\n  loadInvoices\n}) {\n  const hotelID = useSelector(state => state.user.profile.activeHotel);\n  const hotelName = useSelector(state => state.user.profile.activeHotelName);\n  const setMonth = item.month_name;\n  const setYear = item.year;\n\n  async function handleSubmit(data) {\n    try {\n      const {\n        read,\n        value\n      } = data;\n      const imagedata = document.querySelector('input[type=\"file\"]').files[0];\n      const formData = new FormData();\n      formData.append('read', read);\n      formData.append('value', value);\n      formData.append('hotel_id', JSON.parse(hotelID));\n      formData.append('invoice_id', item.id);\n      formData.append('file', imagedata);\n      await api.put(`/invoices`, formData);\n      toast.success('Conta cadastrada com sucesso.');\n      handleClose();\n      loadInvoices();\n    } catch (error) {\n      toast.error('Não foi possível cadastrar conta.');\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"modal__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Incluir conta de consumo\"), React.createElement(\"button\", {\n    className: \"close\",\n    type: \"button\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"iconDelete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"modal__body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal__group-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"modal__group-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Empreendimento\"), React.createElement(\"span\", {\n    className: \"modal__group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, hotelName)), React.createElement(\"div\", {\n    className: \"modal__group-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"modal__group-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"M\\xEAs\"), React.createElement(\"span\", {\n    className: \"modal__group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, setMonth, \"/\", setYear)), React.createElement(Form, {\n    schema: schema,\n    onSubmit: handleSubmit,\n    encType: \"multipart/form-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form__group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"read\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Consumo\", React.createElement(Input, {\n    className: \"form__input\",\n    name: \"read\",\n    type: \"number\",\n    id: \"read\",\n    placeholder: \"Informe o consumo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form__group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Valor\", React.createElement(CurrencyInput, {\n    className: \"form__input\",\n    name: \"value\",\n    id: \"value\",\n    onChange: () => {},\n    placeholder: \"R$ 0,00\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form__group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"attachment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Anexo\", React.createElement(Input, {\n    className: \"form__input\",\n    name: \"attachment\",\n    type: \"file\",\n    id: \"attachment\",\n    accept: \"image/jpeg,image/png,application/pdf\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    className: \"btn btn-add\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Incluir conta de consumo\"))));\n}\nInvoiceFormModal.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  // item: PropTypes.number,\n  loadInvoices: PropTypes.func.isRequired\n};\nInvoiceFormModal.defaultProps = {// item: null,\n};","map":{"version":3,"sources":["C:/Users/henriquet/Desktop/projetos/SIM_WEB/src/pages/Contas/components/InvoiceFormModal.js"],"names":["React","useSelector","Yup","toast","PropTypes","Form","Input","Icon","CurrencyInput","api","emptyStringToNull","value","originalValue","schema","object","shape","read","number","positive","transform","nullable","required","attachment","mixed","InvoiceFormModal","handleClose","item","loadInvoices","hotelID","state","user","profile","activeHotel","hotelName","activeHotelName","setMonth","month_name","setYear","year","handleSubmit","data","imagedata","document","querySelector","files","formData","FormData","append","JSON","parse","id","put","success","error","propTypes","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport * as Yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input } from '@rocketseat/unform';\r\n\r\nimport Icon from '../../../components/Icons';\r\nimport CurrencyInput from '../../../components/CurrencyInput';\r\n\r\nimport api from '../../../services/api';\r\n\r\nfunction emptyStringToNull(value, originalValue) {\r\n  if (typeof originalValue === 'string' && originalValue === '') {\r\n    return null;\r\n  }\r\n  return value;\r\n}\r\n\r\nconst schema = Yup.object().shape({\r\n  read: Yup.number()\r\n    .positive()\r\n    .transform(emptyStringToNull)\r\n    .nullable()\r\n    .required('Consumo é obrigatório.'),\r\n  value: Yup.number()\r\n    .positive()\r\n    .transform(emptyStringToNull)\r\n    .nullable()\r\n    .required('Valor é obrigatório.'),\r\n  attachment: Yup.mixed()\r\n    .nullable()\r\n    .transform(emptyStringToNull)\r\n    .required('Arquivo é obrigatório.'),\r\n});\r\n\r\nexport default function InvoiceFormModal({ handleClose, item, loadInvoices }) {\r\n  const hotelID = useSelector(state => state.user.profile.activeHotel);\r\n  const hotelName = useSelector(state => state.user.profile.activeHotelName);\r\n\r\n  const setMonth = item.month_name;\r\n  const setYear = item.year;\r\n\r\n  async function handleSubmit(data) {\r\n    try {\r\n      const { read, value } = data;\r\n      const imagedata = document.querySelector('input[type=\"file\"]').files[0];\r\n      const formData = new FormData();\r\n\r\n      formData.append('read', read);\r\n      formData.append('value', value);\r\n      formData.append('hotel_id', JSON.parse(hotelID));\r\n      formData.append('invoice_id', item.id);\r\n      formData.append('file', imagedata);\r\n\r\n      await api.put(`/invoices`, formData);\r\n\r\n      toast.success('Conta cadastrada com sucesso.');\r\n      handleClose();\r\n      loadInvoices();\r\n    } catch (error) {\r\n      toast.error('Não foi possível cadastrar conta.');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal__header\">\r\n        <h3>Incluir conta de consumo</h3>\r\n        <button className=\"close\" type=\"button\" onClick={handleClose}>\r\n          <Icon name=\"iconDelete\" />\r\n        </button>\r\n      </div>\r\n      <div className=\"modal__body\">\r\n        <div className=\"modal__group-info\">\r\n          <p className=\"modal__group-title\">Empreendimento</p>\r\n          <span className=\"modal__group-text\">{hotelName}</span>\r\n        </div>\r\n        <div className=\"modal__group-info\">\r\n          <p className=\"modal__group-title\">Mês</p>\r\n          <span className=\"modal__group-text\">\r\n            {setMonth}/{setYear}\r\n          </span>\r\n        </div>\r\n        <Form schema={schema} onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n          <div className=\"form__group\">\r\n            <label htmlFor=\"read\">\r\n              Consumo\r\n              <Input\r\n                className=\"form__input\"\r\n                name=\"read\"\r\n                type=\"number\"\r\n                id=\"read\"\r\n                placeholder=\"Informe o consumo\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form__group\">\r\n            <label htmlFor=\"value\">\r\n              Valor\r\n              <CurrencyInput\r\n                className=\"form__input\"\r\n                name=\"value\"\r\n                id=\"value\"\r\n                onChange={() => {}}\r\n                placeholder=\"R$ 0,00\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form__group\">\r\n            <label htmlFor=\"attachment\">\r\n              Anexo\r\n              <Input\r\n                className=\"form__input\"\r\n                name=\"attachment\"\r\n                type=\"file\"\r\n                id=\"attachment\"\r\n                accept=\"image/jpeg,image/png,application/pdf\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <button className=\"btn btn-add\" type=\"submit\">\r\n            Incluir conta de consumo\r\n          </button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nInvoiceFormModal.propTypes = {\r\n  handleClose: PropTypes.func.isRequired,\r\n  // item: PropTypes.number,\r\n  loadInvoices: PropTypes.func.isRequired,\r\n};\r\n\r\nInvoiceFormModal.defaultProps = {\r\n  // item: null,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}